AcademyReport.description = Displays a usage summary for all videos from the Academy.
AcademyReport.label = Video Academy report
AcademyReport.percentWatched = Duration (%)
AcademyReport.recommended = Pending
AcademyReport.skipped = Skipped
AcademyReport.track = Track
AcademyReport.video = Video
AcademyReport.watched = Viewed
AddressData.badZip = Error in '${name}': The zip code '${zip}' is invalid for the selected country.
AddressData.city = City
AddressData.fullAddressRequired = Error in '${name}': Please fill in all fields.
AddressData.invalidCountry = Invalid country in '${name}': ${error}
AddressData.partialAddressRejected = Error in '${name}': Please enter a full address.
AddressData.street = Street
AddressData.zip = Zip code
AllInListCheck.errorMsg = Values ${values} are not allowed for this field.
AmountRangeCheck.errorMsg = The value (${value}) is invalid. The value must be ${operator} ${limit}.
AmountRangeCheck.minMaxRemark = The value must be ${minOperator} ${min} and ${maxOperator} ${max}.
AmountRangeCheck.remark = The value must be ${operator} ${limit}.
AmountScaleCheck.errorMsg.notNumeric = The value (${value}) is invalid because it is not a number.
AmountScaleCheck.errorMsg.precisionExceeded = The value (${value}) is invalid because it consists of more than ${precision} digits.
AmountScaleCheck.errorMsg.scaleExceeded = The value (${value}) is invalid because it consists of more than ${scale} decimal places.
AmountScaleCheck.remark = The value must not exceed ${precision} digits and ${scale} decimal places.
ArchiveImportJob.errorMsg.optionalFileMissing = The optional file '${fileName}' does not exist in the specified archive.
ArchiveImportJob.errorMsg.optionalFileMissing.messageType = Optional Files
ArchiveImportJob.errorMsg.requiredFileMissing = The file '${fileName}' does not exist in the specified archive.
ArchiveImportJob.file.help = Enter a ZIP archive for processing here. You can select an existing file from the work directory or simply drag and drop a file onto the job.
AuditLog.apiTokenLogin = Login via API token.
AuditLog.externalLoginRequired = The login was aborted as an external login is required.
AuditLog.lockedOrNonexistentUserTriedLogin = A locked or non existing user attempted a login.
AuditLog.loginRejected = Login rejected: Invalid password or API token.
AuditLog.passwordChange = Password changed by user.
AuditLog.passwordChangeFailed = An error occurred while the user tried to change the password.
AuditLog.passwordChangeOther = The password for another user has been changed.
AuditLog.passwordChangeOtherFailed = An error occurred when changing the password for another user.
AuditLog.passwordGenerated = A new password was generated by the user.
AuditLog.passwordLogin = Login via password.
AuditLog.passwordReHashed = The password has been re-hashed using a stronger cryptographic method.
AuditLog.resetPassword = The password has been reset by the user.
AuditLog.resetPasswordRejected = The password wasn't reset as the user account is locked.
AuditLog.selectedTenant = User has transferred clients.
AuditLog.selectedUser = User has taken over another user.
AuditLog.switchedToMainTenant = User has switched to the main client.
AuditLog.switchedToMainUser = User has switched back to the main account.
AuditLogEntry.causedBy = Causer
AuditLogEntry.ip = IP
AuditLogEntry.plural = Security log
AuditLogEntry.timestamp = Time
AuxiliaryFileMode.ALWAYS_UPDATE = Always save (overwrite)
AuxiliaryFileMode.IGNORE = Never save
AuxiliaryFileMode.NEVER_UPDATE = Save new files
AuxiliaryFileMode.UPDATE_ON_CHANGE = Save new files and overwrite them when changes are made
AverageActivityForTenantChart.chartDescription = Displays the average user activity percentage. For this purpose, a period of 45 days is considered and measured for each user on how many days of this an interaction took place.
AverageActivityForTenantChart.description = Displays the average user activity percentage.
AverageActivityForTenantChart.label = Average activity
AverageEducationForTenantChart.chartDescription = Shows the average user training level as a percentage. For this purpose, the percentage of the available videos that has already been viewed per user is considered.
AverageEducationForTenantChart.description = Shows the average user training level as a percentage.
AverageEducationForTenantChart.label = Average training level
BaseFileParameter.invalidFileExtension = The file '${name}' has none of the valid file extensions: ${extensions}
BaseImportHandler.cannotResolveMessage = could not be resolved as '${type}'.
BasePageHelper.sort = Sort
BasicBlobStorageSpace.cannotMoveAcrossSpaces = Moving across file system boundaries is not possible. Please use the 'Move' job.
BasicBlobStorageSpace.cannotMoveDuplicateName = Moving is not possible because a directory or file with that name already exists.
BasicBlobStorageSpace.cannotMoveIntoLoop = It is not possible to move them, as this would create a cyclic dependency.
BasicBlobStorageSpace.cannotRenameDuplicateName = The name is already used by another directory or file.
BasicBlobStorageSpace.cannotRenameRoot = The root directory cannot be renamed.
BasicJobFactory.limitLogMessages = Limit log messages
BasicJobFactory.limitLogMessages.help = Displays only a limited number of messages of the same type.
BasicJobFactory.unauthorized = You are not allowed to start the selected job.
BatchProcessJobFactory.jobLink = Job
BatchProcessJobFactory.scheduled = The job has been added to the execution queue.
BatchProcessTaskExecutor.completedButFailed = The execution was terminated, errors occurred.
BatchProcessTaskExecutor.completedSuccessfully = The execution was successfully completed.
BatchProcessTaskExecutor.started = The execution of the job has been started.
BizController.changesSaved = The changes have been saved
BizController.deleteCompleted = The delete process has been completed.
BizController.deleteProcess = Delete process
BizController.deleteProcessTitle = Deletion of '${entity}'
BizController.deletingInBackground = The entity contains some linked entities and is therefore deleted in the background.
BizController.illegalArgument = Incorrect input. Please correct the marked fields.
BizController.invalidReference = A relationship in '${owner}' should point to referenced object '${target}', but points to '${actual}' instead.
BizController.mustNotBeNew = An existing data object of type '${type}' is required.
BizController.objectDeleted = The object was deleted
BizController.startDelete = Starting the deletion of: ${entity}.
BizController.unknownObject = Unknown data object: '${id}' of type '${type}'.
BizInterceptor.missingPermission = You need the permission '${permission}' to perform the action.
Blob.fileExtension = File type
Blob.lastModified = Last change
Blob.lastTouched = Last Use
BlobRefField.URL = URL
BlobRefField.malformedURL = Not a valid URL
BlobRefField.resetButton = Reset to default
BlobRefField.specifyURL = Specify URL
BlobRefField.uploadButton = Choose a file...
BlobStorageSpace.sortByFilename = File name
BlobStorageSpace.sortByLastModified = Last change
BlobStorageSpace.work.description = Contains work files for processing by the system or results from exports and checks.
BlockedIPsReportJobFactory.description = Returns a list of currently blocked IP addresses.
BlockedIPsReportJobFactory.label = Blocked IP addresses
BucketInfo.numberOfObjects = Number of files
CheckForChildrenTask.hasChildren = The child tenants of this tenant need to be deleted first!
CodeList = Code list
CodeList.new = New code list
CodeList.noPipeAllowed = The field "Code" must not contain the character '|'.
CodeList.plural = Code lists
CodeListController.codeMustBeFilled = The field "Code" must not be empty.
CodeListData.autofill = Automatic filling
CodeListData.autofill.help = Specifies whether unknown entries should be created automatically.
CodeListEntry.new = new entry
CodeListEntry.plural = Entries
CodeListEntryData.additionalValue = Additional value
CodeListEntryData.value = Value
CodeLists.missingEntry = The required entry '${code}' in the code list '${codeList}' does not exist.
CodeLists.missingList = The code list '${codeList}' does not exist.
CodeLists.noCurrentTenant = No client could be found for the specified code list
ComparisonPeriod.PREVIOUS_DAY = Previous day
ComparisonPeriod.PREVIOUS_MONTH = Previous month
ComparisonPeriod.PREVIOUS_WEEK = Previous week
ComparisonPeriod.PREVIOUS_YEAR = Previous year
ContactData.email = E-Mail
ContactData.fax = FAX
ContactData.invalidPhone = Error in field '${field}': '${value}' is not a valid phone number.
ContactData.mobile = Mobile phone
ContactData.phone = Phone
ConversionEngine.conversionError = The conversion of the file ${filename} failed, the variant ${variantName} could not be created: ${message}
ConversionEngine.processTitle = File conversion
Country._all = Worldwide
Country.ad = Andorra
Country.ae = United Arab Emirates
Country.al = Albania
Country.ar = Argentina
Country.at = Austria
Country.au = Australia
Country.ba = Bosnia Herzegovina
Country.be = Belgium
Country.bg = Bulgaria
Country.br = Brazil
Country.by = Belarus
Country.ca = Canada
Country.ch = Switzerland
Country.cl = Chile
Country.cn = China
Country.cy = Cyprus
Country.cz = Czechia
Country.de = Germany
Country.dk = Denmark
Country.ee = Estonia
Country.es = Spain
Country.fi = Finland
Country.fr = France
Country.gb = United Kingdom
Country.gr = Greece
Country.hr = Croatia
Country.hu = Hungary
Country.id = Indonesia
Country.ie = Ireland
Country.il = Israel
Country.in = India
Country.is = Iceland
Country.it = Italy
Country.jp = Japan
Country.kr = South Korea
Country.kz = Kazakhstan
Country.li = Liechtenstein
Country.lt = Lithuania
Country.lu = Luxembourg
Country.lv = Latvia
Country.mc = Monaco
Country.md = Moldova
Country.me = Montenegro
Country.mk = North Macedonia
Country.mt = Malta
Country.mx = Mexico
Country.my = Malaysia
Country.nl = Netherlands
Country.no = Norway
Country.none = None
Country.nz = New Zealand
Country.pe = Peru
Country.pl = Poland
Country.pt = Portugal
Country.ro = Romania
Country.row = Rest of the world
Country.rs = Serbia
Country.ru = Russia
Country.sa = Saudi Arabia
Country.se = Sweden
Country.sg = Singapore
Country.si = Slovenia
Country.sk = Slovakia
Country.sm = San Marino
Country.th = Thailand
Country.tr = Turkey
Country.ua = Ukraine
Country.us = USA
Country.vn = Vietnam
Country.xk = Kosovo
Country.za = South Africa
CustomEventHandler.customEvents = Customer Scripting
CustomEventHandler.message = Error in customer script - System: ${system}: ${message}
DashboardBrowserDistributionChart.description = Shows the number of views of the backend homepage per browser.
DashboardBrowserDistributionChart.label = Browser distribution in the backend
DashboardController.help = Help & support
DashboardController.more = more
DashboardController.news = News
DashboardPlatformDistributionChart.description = Displays the number of backend homepage views per platform.
DashboardPlatformDistributionChart.label = Platform distribution in the backend
DataExplorerController.addChart = Add chart
DataExplorerController.comparisonPeriod = Comparison period
DataExplorerController.dateColumn = Date
DataExplorerController.export = Export
DataExplorerController.last12Months = 12 months
DataExplorerController.last30Days = 30 days
DataExplorerController.last90Days = 90 days
DataExplorerController.lastMonth = Last month
DataExplorerController.lastYear = Last year
DataExplorerController.matchingCharts = Statistics
DataExplorerController.period = Period
DataExplorerController.periodLastMonth = Previous month
DataExplorerController.periodLastYear = Previous year
DataExplorerController.periodOff = Off
DataExplorerController.references = More charts
DataExplorerController.selectEntity = Select target object
DataExplorerController.title = Data Explorer
DataExplorerController.unauthorized = You do not have access to the requested data.
DataExplorerController.unknownEntity = The selected data object does not exist.
DatabaseController.execute = Execute
DatabaseController.export = Export result
DatabaseController.noChanges = The system is currently not aware of any changes to the database schema.
DatabaseController.realm = Database
DatabaseController.reason = Reason
DatabaseController.schema = Database schema
DatabaseController.sql = SQL
DatabaseController.unknownChange = Unknown change
DateRangeParameter.label = Period
DateTimeFormatCheck.errorMsg = The value '${value}' does not match the date format '${format}'.
DateTimeFormatCheck.remark = Date format: ${format}
DeleteFilesJob.count.directoriesDeleted = Directories deleted
DeleteFilesJob.count.directoriesSkipped = Directories skipped
DeleteFilesJob.count.filesDeleted = Files deleted
DeleteFilesJob.count.filesSkipped = Files skipped
DeleteFilesJob.deleteEmpty = Delete empty subdirectories
DeleteFilesJob.deleteEmpty.help = Deletes empty directories when all files or directories contained within have been deleted.
DeleteFilesJob.directory.cannotDelete = Directory '${path}' cannot be deleted.
DeleteFilesJob.directory.deleted = Directory '${path}' deleted.
DeleteFilesJob.directory.notEmpty = Directory '${path}' not deleted because it is not empty.
DeleteFilesJob.file.cannotDelete = The file '${path}' cannot be deleted.
DeleteFilesJob.file.deleted = File '${path}' deleted.
DeleteFilesJob.file.inUse = File '${path}' not deleted as it is still in use.
DeleteFilesJob.file.readOnly = File '${path}' not deleted because it is write-protected.
DeleteFilesJob.lastModifiedBefore = Older than
DeleteFilesJob.lastModifiedBefore.help = Deletes only files that are older than the selected date. If empty, no filter is applied.
DeleteFilesJob.onlyUnused = Only unused
DeleteFilesJob.onlyUnused.help = Deletes only files that are considered not in use.
DeleteFilesJob.pathFilter = File path filter
DeleteFilesJob.pathFilter.help = Deletes only files that match the specified filter. The filter accepts the Unix GLOB pattern. A few common examples: <tt>*.jpg</tt> finds files with the file extension <b>jpg</b> at any location; <tt>assets/*</tt> finds any file with a parent folder named <b>assets</b>; <tt>foo/**/bar</tt> matches <b>foo/a/bar</b> and <b>foo/a/b/c/bar</b>. If empty, no filter is applied.
DeleteFilesJob.recursive = Recursive
DeleteFilesJob.recursive.help = Delete files in subdirectories as well.
DeleteFilesJob.simulation = Simulation
DeleteFilesJob.simulation.help = Simulates the execution. No files or directories are actually deleted.
DeleteFilesJob.sourcePath = Start directory
DeleteFilesJob.sourcePath.help = Select the start directory from which files or directories should be deleted.
DeleteFilesJob.sourcePath.invalid = Start path '${path}' does not exist or is not a directory.
DeleteFilesJob.warn.cannotDelete = Deletion not allowed
DeleteFilesJob.warn.inUse = Files in use
DeleteFilesJob.warn.notEmpty = Non-empty directories
DeleteFilesJob.warn.readOnly = Read-only files
DeleteFilesJobFactory.description = Deletes files or directories based on selectable filter options.
DeleteFilesJobFactory.label = Delete files or directories
DeleteProcessesTask.deleteCount = No processes present | A process is deleted | ${count} processes are deleted.
DeleteTenantJobFactory.aborting = An error occurred while deleting, the process is aborted.
DeleteTenantJobFactory.deletingMainEntity = Delete the data object of the client.
DeleteTenantJobFactory.description = Deletes a selected client and all associated data.
DeleteTenantJobFactory.label = Delete client
DeleteTenantJobFactory.simulate = Simulate deletion
DeleteTenantJobFactory.simulate.help = If 'Yes' is selected, the deletion is only simulated. This can help you understand the implications of deletion because you can see in the log what data would be deleted.
DeleteTenantJobFactory.simulateInfo = The deletion is only simulated.
DeleteTenantJobFactory.tenantName = Name of the tenant
DeleteTenantJobFactory.tenantName.help = Enter the name of the tenant to be deleted here again. This is to prevent the wrong tenant from being accidentally deleted.
DeleteTenantJobFactory.tenantNameMismatch = The entered name does not match the name of the tenant to be deleted.
DeleteTenantJobFactory.title = Delete client "${name}"
DeleteTenantJobFactory.title.simulate = Delete client "${name}" (SIMULATED)
DeleteTenantTask.beforeExecution.many = Deleting ${count} ${name}.
DeleteTenantTask.beforeExecution.no = No ${name} to delete.
DeleteTenantTask.beforeExecution.one = Deleting 1 ${name}.
DictionaryBasedArchiveImportJob.file = File
DictionaryBasedArchiveImportJob.msgImportFile = Importing ${file}…
DictionaryBasedImportJobFactory.ignoreEmpty = Ignore empty values
DictionaryBasedImportJobFactory.ignoreEmpty.help = Specifies that missing values are skipped instead of emptying the corresponding target field.
DisasterController.date = Date
DisasterController.lock = Locking the user interface
DisasterController.lockMessageHelp = Specify the message that is displayed when the user interface is locked. Note that the lock is only performed if both a message is specified and the <b>lock is activated</b>. The date and time can be used to manually set the point in time when the lock takes effect. If the date or the time is empty, the lock takes effect immediately.
DisasterController.locked = Lockout activated
DisasterController.maintenanceMessage = Notification of maintenance work
DisasterController.message = Message
DisasterController.previewMessageHelp = Enter the message for announcing maintenance work here. The date and time can be used to manually set the time from when the message is displayed. If the date or time is empty, the message is displayed immediately.
DisasterController.time = Time
DisasterController.title = Maintenance mode
EntityExport.fullExport = Export all applicable records, because either no template was selected or the template does not contain any additional data?
EntityExportJob.exportWithDefaultMapping = The export contains the standard columns because no template was selected?
EntityExportJob.learningMapping = Determine the columns from the contents of row ${row}?
EntityExportJob.startingTemplateBasedExport = Begin enrichment of the given data?
EntityExportJobFactory.templateFile = Template
EntityExportJobFactory.templateFile.help = Select a CSV- or MS Excel file which specifies a different column order. This file can also contain additional lines, which are then completed by the system.
EntityExportJobFactory.templateModes = If a template exists, the column assignments are determined automatically using the first line and the field names (or alternative descriptions). Upper/lower case and spaces are ignored. If the template contains further rows, these are (if possible) enriched instead of outputting all data records.
EntityImportJob.cannotHandleEntity = The data object '${entity}' cannot be imported: ${message}
EntityImportJob.entityCreated = New creation
EntityImportJob.entityDeleted = Deleted
EntityImportJob.entityUpdated = Update
EntityImportJob.rowIgnored = line skipped
EntityImportJobFactory.automaticMappings = The column assignments are determined automatically using the first line and the field names (or alternative descriptions). Upper/lower case and spaces are ignored.
EntityImportJobFactory.importMode = Mode
EntityImportJobFactory.importMode.help = Specifies which lines of the file are taken into account. All other lines are skipped.
EntityImportSyncJobFactory.syncMode = mode
EntityImportSyncJobFactory.syncMode.help = Please note that the "Synchronize" mode deletes items that are not included in the import file. Note the <i> Purge </i> setting to specify what data to purge.
EntityImportSyncJobFactory.syncSource = Source
EntityImportSyncJobFactory.syncSource.help = Here you can enter any code to identify your data source, eg "ERP" or "PIM". The source is relevant during the next import in "Synchronize" mode to determine which of the data that is not present in the import source file, if any, will be cleaned. <b>Note:</b> If you customize the default value, we recommend creating a job template to use this source again and again!
EntityImportSyncJobFactory.syncSourceDeleteMode = Cleanup
EntityImportSyncJobFactory.syncSourceDeleteMode.help = Determines which data from previous imports will be purged if not included in the current import. By default, only data from the same source is cleaned. Only change this setting if you have imported data without attribution or want to completely reset data not present in the import.
EntityParameter.mustExist = An existing data object is required.
ErrorContext.deleteError = The data object '${entity}' cannot be deleted: ${message}
ErrorContext.importError = The data object '${entity}' cannot be imported: ${message}
EventTimeSeriesComputer.anonymous = Anonymous
EventTimeSeriesComputer.loggedIn = Registered
ExportFileType.CSV = CSV file
ExportFileType.XLS = MS Excel '97 (.xls)
ExportFileType.XLSX = MS Excel (.xlsx)
ExportLogsAsFileTaskExecutor.completed = The export was successfully completed.
ExportLogsAsFileTaskExecutor.reportTargetFile = The output '${outputLabel}' is exported as file '${filename}' and attached to the process.
ExtractArchiveJob.completed = The archive was completely unpacked.
ExtractArchiveJob.deleteArchiveParameter = Delete archive after unpacking
ExtractArchiveJob.deleteArchiveParameter.help = Specifies whether the archive file should be deleted or retained after a successful unpacking process.
ExtractArchiveJob.deletingArchive = Delete unpacked archive?
ExtractArchiveJob.description = Extracts an archive file from the file storage into the specified target directory.
ExtractArchiveJob.destinationParameter = Target directory
ExtractArchiveJob.destinationParameter.help = Directory in which the file is to be extracted. Leave blank so that the file is extracted into the current directory.
ExtractArchiveJob.emptyFile = File '${filename}' is empty and was skipped.
ExtractArchiveJob.fileCreated = File created
ExtractArchiveJob.fileEmpty = Empty file
ExtractArchiveJob.fileOverwritten = File overwritten
ExtractArchiveJob.fileSkipped = File ignored
ExtractArchiveJob.flattenDirectoriesParameter = Ignore folder structure
ExtractArchiveJob.flattenDirectoriesParameter.help = Specifies whether the folder structure in the archive should be ignored. If set, all files are stored in the target directory without creating sub-folders.
ExtractArchiveJob.label = Unzip the file
ExtractArchiveJob.overwriteExistingFilesParameter = Overwrite target files
ExtractArchiveJob.overwriteExistingFilesParameter.help = Specifies whether files should be overwritten if they already exist in the target directory. "When changed" here refers to the size and the last modification date: If the files are of different sizes or if the last modification date of the archive file is newer than the existing one, the file is updated.
ExtractArchiveJob.progress = Progress: ${progress}
ExtractArchiveJob.sourceParameter = Archive file
ExtractArchiveJob.sourceParameter.help = Archive which should be unpacked
FetchFromUrlMode.ALWAYS_FETCH = Always update
FetchFromUrlMode.NEVER_FETCH = Deactivated
FetchFromUrlMode.NON_EXISTENT = Just create
FetchFromUrlMode.NON_EXISTENT_OR_MODIFIED = Create and update
FetchFromUrlMode.parameter.description = Controls in which case files provided as a URL are automatically downloaded by the system.
FetchFromUrlMode.parameter.name = Download from urls
FieldDefinition.aliasRemark = Alternative names: ${aliases}
FieldDefinition.name = Name
FieldDefinition.remarks = Remarks
FieldDefinition.type = Type
FieldDefinition.typeBoolean = Yes/No
FieldDefinition.typeDate = Date
FieldDefinition.typeDateTime = Date + time
FieldDefinition.typeLookupValueProperty = Value from list
FieldDefinition.typeLookupValuesProperty = Values from list
FieldDefinition.typeNumber.length = Number (${precision},${scale})
FieldDefinition.typeNumber.plain = Number
FieldDefinition.typeOther = Other
FieldDefinition.typeString.length = Text (${length})
FieldDefinition.typeString.plain = Text
FieldDefinition.typeStringList = List
FieldDefinition.typeTime = Time
FileExportJobFactory.destination = Objective
FileExportJobFactory.destination.help = Select a target directory or a target file here. If you leave the field empty, the file will be attached to the export process.
FileExportJobs.tooManyFiles = No new file could be created because all file names (${firstFile} to ${lastFile}) already exist.
FileImportJob.auxiliaryFileCopied = Attachment copied
FileImportJob.auxiliaryFileSkipped = Attachment ignored
FileImportJob.copyAuxiliaryFileFailed = Error copying '${file}': ${message} (${error}).
FileImportJob.downloadingFile = Load '${file}' (${size}) from the storage system into the local memory?
FileImportJob.fileNotSupported = The file is not supported.
FileImportJob.importingZipFile = The file is unpacked for import.
FileImportJob.importingZippedFile = The unzipped file '${filename}' is imported.
FileImportJob.noZippedFileFound = The archive does not contain a supported file.
FileImportJob.requiredFileNotFound = The file '${filename}' cannot be found in the archive.
FileImportJobFactory.auxFileFlattenDirectoriesParameter = Ignore the folder structure of the additional files
FileImportJobFactory.auxFileFlattenDirectoriesParameter.help = Specifies whether the folder structure in the archive should be ignored. If set, all additional files are stored in the target directory without creating sub-folders.
FileImportJobFactory.auxFileMode = Additional files
FileImportJobFactory.auxFileMode.help = You have provided a file archive for processing. Here you control whether existing media files should also be taken over from this file archive during the import and if so, how existing files are overwritten depending on the date.
FileImportJobFactory.auxFileParentDirectory = Base path
FileImportJobFactory.auxFileParentDirectory.help = Defines a folder within the target directory where the new files will be uploaded. Use '/' for a path with subdirectories. The folder will be created if necessary.
FileImportJobFactory.file = File
FileImportJobFactory.file.help = Enter a file or an archive file (e.g. ZIP) for processing here. You can select an existing file from the work directory or simply drag and drop a file onto the job.
FileParameter.invalidDirectory = The directory '${path}' was not found.
FileParameter.invalidFile = The file '${path}' was not found.
FileParameter.invalidFileOrDirectory = '${path}' is neither a file nor an existing target directory.
ForceReplicationJob.description = Forces full replication of a storage space. This is particularly useful if a new replication target has been defined and existing data is to be replicated.
ForceReplicationJob.jobTitle = Force full replication of '${space}'
ForceReplicationJob.label = Force full storage space replication
ForceReplicationJob.minModificationDate = Min. Change date
ForceReplicationJob.minModificationDate.description = If you enter a date here, only objects that have been changed since (and including) this date will be copied. All other objects are skipped (see counter "Ignored").
ForceReplicationJob.space = Storage space
ImportBatchProcessFactory.eventDispatcher = Customer script
ImportBatchProcessFactory.eventDispatcher.help = Select the scripting profile here that should be used for the import of the data.
ImportDictionary.fieldError = Error in field ${field} (${label}): ${message}
ImportDictionary.fields = Fields
ImportDictionary.mappingFunction = Column assignments
ImportDictionary.missingColumn = The ${index} ('${expected}') column is missing.
ImportDictionary.severeFieldError = Exception error while checking field ${field} (${label}): ${message}
ImportDictionary.superfluousColumn = The column ${index} ('${column}') is unexpected.
ImportDictionary.tooManyColumns = The record contains too many columns (${count}). ${columns} columns were expected. Please verify the used field delimiter (usually semicolon) and field enclosure (usually double quotes).
ImportDictionary.unknownColumn = The column ${index} ('${column}') could not be assigned.
ImportDictionary.wrongColumn = In the column ${index}'${expected}' was expected, but '${column}' was found.
ImportJob.invalidReference = A relationship in '${owner}' should point to referenced object '${target}', but points to '${actual}' instead.
ImportMode.CHECK_ONLY = Check only, do not save
ImportMode.NEW_AND_UPDATES = Process all lines
ImportMode.NEW_ONLY = Only create new data records
ImportMode.UPDATE_ONLY = Update existing records only
ImportTransactionData.source = Source
ImportTransactionData.txnId = Transaction ID
IncidentController.totalIncidents = Number of entries
InteractiveJobFactory.additionalMetrics = Additional metrics
InternationalAddressData.country = Country
Isenguard.limitReached = A rate limit was reached by the user.
Isenguard.rateLimitInfo = Rate limits
JobConfigData.customPersistencePeriod = Individual retention period
JobConfigData.customPersistencePeriod.help = Enter your own retention period for automatically started jobs here. If you leave the field blank, the default period will be used.
JobConfigData.job = Job
JobConfigData.label = Designation
JobConfigData.label.help = Enter a name or short description for the scheduled task here.
JobConfigData.unknownJob = Unknown job: ${job}
JobDescription.title = Designation
JobFactory.execute = Execute
JobFactory.parameters = Parameter
JobFactory.plural = Jobs
JobFactory.refresh = Take over
JobPreset.plural = Job templates
JobSchedulerLoop.jobLink = Planned execution
JobSchedulerLoop.scheduledExecutionInfo = The job was started by the scheduled execution of '${entry}'?
Jobs.matchingJobs = Matching jobs
JobsController.createPreset = Create template
JobsController.createPreset.help = Enter the name of the template here. Use the name of an existing template to update it.
JobsController.execute = Execute
JobsController.job = Job
JobsController.jobs = Jobs
JobsController.logs = Protocols
JobsController.presets = Templates
JobsController.showInfos = Documentation
JobsController.unknownJob = Unknown job of type: ${jobType}
JobsController.usePreset = Apply
JobsRoot.description = Contains a subdirectory for each job that can process a file. This again contains one subdirectory for each job template, which defines the remaining parameters. If a file is uploaded here, the corresponding job is started with it.
JobsRoot.processLabel = Uploads via / jobs
JournalEntry.plural = Change log
JournalEntry.subsystem = Subsystem
JournalEntry.targetId = Id
JournalEntry.targetName = Object
JournalEntry.targetType = Type
JournalEntry.tod = Date
JournalEntry.userId = User ID
JournalEntry.username = User
KnowledgeBase.articlesLabel = article
KnowledgeBase.chaptersLabel = chapter
KnowledgeBase.crossReferencesLabel = See also
KnowledgeBase.helpBtn = help
KnowledgeBase.kb = Knowledge Base
KnowledgeBase.missingPermission = You do not have the required permissions to view the selected item.
KnowledgeBase.tableOfContent.heading = Table of Contents
KnowledgeBase.urlClipboardSuccess = The link has been copied to the clipboard
KnowledgeBase.urlCopyInfo = You can easily pass this link on to others, as it works for 30 days without a login.
KnowledgeBaseBrowserDistributionChart.description = Shows the number of times the knowledge base was accessed per browser.
KnowledgeBaseBrowserDistributionChart.label = Browser distribution in the knowledge base
KnowledgeBaseEntryViewsChart.chartDescription = Shows how often a selected article from the knowledge base was displayed in the selected period. If no comparison period is selected, the distribution between registered users and anonymous accesses is output.
KnowledgeBaseEntryViewsChart.description = Shows how often a selected article from the knowledge base was displayed in the selected period.
KnowledgeBaseEntryViewsChart.label = Views of a KB article
KnowledgeBasePlatformDistributionChart.description = Shows the number of views of the knowledge base per platform.
KnowledgeBasePlatformDistributionChart.label = Platform distribution in the knowledge base
KnowledgeBaseViewsChart.chartDescription = Shows how often the knowledge base was displayed in the selected period. If no comparison period is selected, the distribution between registered users and anonymous accesses is output.
KnowledgeBaseViewsChart.description = Shows how often the knowledge base was displayed in the selected period.
KnowledgeBaseViewsChart.label = Knowledge Base Views
Language.af = Afrikaans
Language.ar = Arabic
Language.be = Belarusian
Language.bg = Bulgarian
Language.cs = Czech
Language.da = Danish
Language.de = German
Language.el = Greek
Language.en = English
Language.es = Spanish
Language.et = Estonian
Language.fa = Farsi
Language.fallback = Standard text
Language.fi = Finnish
Language.fr = French
Language.ga = Irish
Language.he = Hebrew
Language.hi = Hindi
Language.hr = Croatian
Language.hu = Hungarian
Language.id = Indonesian
Language.is = Icelandic
Language.it = Italian
Language.ja = Japanese
Language.kk = Kazakh
Language.ko = Korean
Language.lb = Luxembourgish
Language.lt = Lithuanian
Language.lv = Latvian
Language.ms = Malay
Language.mt = Maltese
Language.nl = Dutch
Language.no = Norwegian
Language.pl = Polish
Language.pt = Portuguese
Language.ro = Romanian
Language.ru = Russian
Language.sk = Slovak
Language.sl = Slovenian
Language.sr = Serbian
Language.sv = Swedish
Language.ta = Tamil
Language.th = Thai
Language.tr = Turkish
Language.uk = Ukrainian
Language.vi = Vietnamese
Language.vls = Flemish
Language.zh = Chinese
LengthCheck.errorMsg = The value must not be longer than ${maxLength} characters. (length: ${length}).
LengthCheck.remark = Maximum field length: ${maxLength}
LineBasedAliases.column = Column ${column}
LineBasedArchiveImportJob.duplicateColumn = The column '${column}' was specified multiple times.
LineBasedExportJobFactory.fileType = File type
LineBasedExportJobFactory.fileType.help = Select the type of the file to be exported here. If you have already selected a target file, the format is determined by its file extension.
LineBasedImportExportJobFactory.outputFile = Output file
LineBasedImportJobFactory.importAllSheets = Import all worksheets
LineBasedImportJobFactory.importAllSheets.help = Specifies whether all worksheets or only the first should be imported for Microsoft Excel files.
LineBasedJob.erroneousRow = Error
LineBasedJob.errorInRow = Error in line ${row}: ${message}
LineBasedJob.failureInRow = Error in row ${row}: ${errorMessage} (${errorClass})
LineBasedJob.row = Line
LoggedMessage.category = Logger
LoggedMessage.level = Level
LoggedMessage.message = Message
LoggedMessage.node = Machine
LoggedMessage.plural = System log
LoggedMessage.tod = Date
LoggedMessage.user = User
LoginData.accountIsLocked = The user is locked.
LoginData.accountLocked = Locked
LoginData.accountLocked.help = Determines if this user account is locked. A locked user cannot access the system in any way.
LoginData.apiToken = API code
LoginData.changeFingerprint = Log out on all devices
LoginData.generatedPassword = Generated Password
LoginData.lastExternalLogin = Last login (external)
LoginData.lastLogin = Last login
LoginData.lastPasswordChange = Last password change
LoginData.lastSeen = Last active
LoginData.lock = Lock
LoginData.numberOfLogins = No. Logins
LoginData.password = Password
LoginData.password.generate = Generate password
LoginData.password.generateAndSend = Generate and send password
LoginData.password.hiddenGenerated = Generated password hidden
LoginData.password.hiddenGeneratedShort = hidden
LoginData.password.set = Set password
LoginData.salt = salt
LoginData.unlock = Unlock
LoginData.username = User name
LookupTable.countries = Countries
LookupTable.languages = Languages
LookupTable.salutations = Salutations
LookupTableController.deprecated = This value is deprecated and should no longer be used.
LookupTableController.paginationInfo = ${from} to ${to}
LookupTableController.searchPlaceholder = Search in ${count} entries ...
LookupValue.invalidValue = Unknown or invalid value: '${value}'
LookupValueCheck.remark = Allowed values: A value from the provided list
LookupValueCheck.remark.allowCustomValues = Allowed values: A value from the predefined list or a custom value
LookupValuesCheck.remark = Allowed values: One or more values from the provided list
LookupValuesCheck.remark.allowCustomValues = Allowed values: One or more values from the provided list and own values
MailLoggedMessage.html = HTML
MailLoggedMessage.mailExtension = Template
MailLoggedMessage.messageId = Message ID
MailLoggedMessage.node = Machine
MailLoggedMessage.plural = Mails
MailLoggedMessage.receiver = Recipient
MailLoggedMessage.receiverName = Recipient name
MailLoggedMessage.sender = Sender
MailLoggedMessage.senderName = Sender name
MailLoggedMessage.success = Successful
MailLoggedMessage.text = Text
MailLoggedMessage.tod = Date
MailProtocol.failed = Failed
MailProtocol.html = HTML
MailProtocol.messageId = Message ID
MailProtocol.name = Surname
MailProtocol.node = Machine
MailProtocol.plural = E-mails
MailProtocol.preview = Preview
MailProtocol.receiver = Recipient
MailProtocol.receiverName = Recipient name
MailProtocol.sender = Sender
MailProtocol.senderName = Sender name
MailProtocol.success = Successful
MailProtocol.text = Text
MailProtocol.tod = Date
MailProtocol.type = Type
MailProtocol.value = Value
Menu.settings = Manage
Metric.num-active-tenants = Active Tenants
Metric.num-active-users = Active Users
Metric.num-tenants = Tenants
Metric.num-users = User
MissingEntityMode.CREATE = Create
MissingEntityMode.FAIL = Cancel (skip record)
MissingEntityMode.IGNORE = Ignore (leave field blank)
Model.JobPreset = Job template
Model.address = Address
Model.code = Code
Model.codeList = Code list
Model.codeListEntry = Entry
Model.config = Configuration
Model.confirmation = Confirmation
Model.create = Create new
Model.description = Description
Model.details = Details
Model.email = Email
Model.extended = Extended
Model.id = ID
Model.incident = Error
Model.invalidEmail = Invalid email address.
Model.lang = Language
Model.language = Language
Model.links = Links
Model.login = Login
Model.login.emailRequired = Please provide an email address
Model.login.forgotPassword = Forgot password
Model.login.forgotPassword.help = Please enter your email address here to reset your password. This will be sent to you by e-mail.
Model.login.keepLogin = Stay logged in
Model.login.login = Login
Model.login.password = Password
Model.login.passwordResetted = Your password has been reset. You have received an email with the new password.
Model.login.passwortReset = Reset Password
Model.login.resetPassword = Reset Password
Model.login.user = User name
Model.monthlyStatistics = Statistics (per month)
Model.name = Name
Model.newPassword = New Password
Model.oldPassword = Old password
Model.overview = Overview
Model.password = Password
Model.password.confirmationMismatch = The entered password does not match the confirmation.
Model.password.hilarious = Insufficient
Model.password.hilarious.description = Passwords shorter than ${minLength} characters
Model.password.minLengthError = The entered password is too short.
Model.password.moderate = Moderately Safe
Model.password.moderate.description = Passwords consisting of uppercase / lowercase letters or numbers
Model.password.recommended = Recommended
Model.password.set = Change Password
Model.password.stateOfTheArt = Secure
Model.password.stateOfTheArt.description = Passwords consisting of letters and special characters
Model.password.unsafe = Insecure
Model.password.unsafe.description = Passwords shorter than ${saneLength} characters or passwords only consisting of lowercase letters, uppercase letters or numbers.
Model.priority = Priority
Model.saml = SAML
Model.security = Security
Model.statistics = Statistics
Model.statistics90Days = Statistics (90 days)
Model.tenant = Tenant
Model.userAccount = User
Model.virtualObject = File
MongoCodeListExportJobFactory.description = Exports a code list as CSV or Excel file.
MongoCodeListExportJobFactory.label = Export code list
MongoCodeListImportJobFactory.description = Imports a code list from a CSV or Excel file.
MongoCodeListImportJobFactory.label = Import code list
MongoCustomScript.code = Code
MongoCustomScript.disabled = Deactivated
MongoCustomScript.plural = Customer scripts
MongoCustomScript.script = Source code
MongoCustomScript.state = Status
MongoCustomScript.state.active = Active
MongoCustomScript.state.inactive = Inactive
MongoCustomScript.unnamedScript = Unnamed script
MongoTenantExportJobFactory.description = Exports clients to a CSV or Excel file.
MongoTenantExportJobFactory.label = Export clients
MongoUserAccountExportJobFactory.description = Exports users to a CSV or Excel file.
MongoUserAccountExportJobFactory.label = Exporting users
MongoUserAccountImportJobFactory.description = Imports user accounts using a CSV or Excel file.
MongoUserAccountImportJobFactory.label = Import user accounts
MoveIndexAliasJobFactory.descriptorParameter = Scheme
MoveIndexAliasJobFactory.destinationParameter = Target Index
MultiLanguageEditor.addLanguage = Add language
MultiLanguageEditor.apply = Apply
MultiLanguageEditor.placeholder = The field is not yet filled for any language. Click on 'Add language' to add texts.
MultiLanguageEditor.pleaseSelect = Choose translation
MultiLanguageEditor.translation = Translation
MultiLanguageString.invalidLanguage = Invalid value '${language}' as language code in field '${field}', text '${text}'.
MultiLanguageStringProperty.empty = Please enter all translations in the '${field}' field.
MultiLanguageStringProperty.fallbackNotSet = Please enter at least the standard text in the '${field}' field.
NumberOfActiveTenantsChart.description = Shows the number of tenants with at least one active user.
NumberOfActiveTenantsChart.label = Active Clients
NumberOfActiveUsersChart.chartDescription = Shows the number of active users in the selected period. A user is considered active if they have interacted with the system within a 90 day window.
NumberOfActiveUsersChart.description = Shows the number of active users in the selected period.
NumberOfActiveUsersChart.label = Active users (system-wide)
NumberOfActiveUsersForTenantChart.chartDescription = Shows the number of active users in the selected period. A user is considered active if they have interacted with the system within a 90 day window.
NumberOfActiveUsersForTenantChart.description = Shows the number of active users in the selected period.
NumberOfActiveUsersForTenantChart.label = Active Users
NumberOfProcessesChart.description = Shows the number of background processes that were completed in the selected period.
NumberOfProcessesChart.label = Background processes (system-wide)
NumberOfProcessesForTenantChart.description = Shows the number of background processes that were completed in the selected period.
NumberOfProcessesForTenantChart.label = Background processes
NumberOfTenantsChart.description = Shows the number of all clients known to the system.
NumberOfTenantsChart.label = Number of clients
NumberOfUpdateClicksChart.chartDescription = Shows how often news or update posts (on the login page or the dashboard) were clicked. If no comparison period is selected, the distribution between registered users and anonymous accesses is output.
NumberOfUpdateClicksChart.description = Shows how often news or update posts (on the login page or the dashboard) were clicked.
NumberOfUpdateClicksChart.label = Clicks on updates
NumberOfUserInteractionsChart.chartDescription = Shows the number of users who have interacted with the system in the selected time period. If no comparison period is selected, the number of different clients is also output.
NumberOfUserInteractionsChart.description = Shows the number of users who have interacted with the system in the selected time period.
NumberOfUserInteractionsChart.label = User interactions (system-wide)
NumberOfUserInteractionsChart.tenants = Tenants with interactions
NumberOfUserInteractionsChart.users = Users with Interactions
NumberOfUserInteractionsForTenantChart.description = Shows the number of users who have interacted with the system in the selected time period.
NumberOfUserInteractionsForTenantChart.label = User Interactions
NumberOfUsersChart.description = Shows the number of users in the selected period.
NumberOfUsersChart.label = Number of users (system-wide)
OnboardingController.academy = Video Academy
OnboardingController.allTracks = All videos
OnboardingController.availableVideos = Available videos
OnboardingController.currentRecommendation = Video recommendation
OnboardingController.duration = duration
OnboardingController.moreVideos = More videos
OnboardingController.recommended = Recommended
OnboardingController.recommendedVideos = 1 featured video | ${count} recommended videos
OnboardingController.showAllVideos = Show all videos ...
OnboardingController.showTrack = More Videos...
OnboardingController.skip = Skip
OnboardingController.skipped = Skipped
OnboardingController.totalDuration = Total runtime
OnboardingController.videoAcademyBtnLabel = Explanatory video
OnboardingController.videoAcademyTrackBtnLabel = Explainer videos
OnboardingController.videos = Videos
OnboardingController.watched = Already viewed
OpenSearchController.label = System-wide search
OverrideMode.ALWAYS = always
OverrideMode.NEVER = Never
OverrideMode.ON_CHANGE = If there is a change
PackageData.additionalPermissions = Additional permissions
PackageData.packageString = Service package
PackageData.upgrades = Upgrades
Packages.packages = Packages
Packages.permission.active = Active
Packages.permission.default = Default
Packages.permission.defaultValue = Default value
Packages.permission.denied = Denied
Packages.permission.description = Description
Packages.permission.name = Name
Packages.upgrades = Upgrades
Parameter.invalidValue = Error in parameter ${name}: ${message}
Parameter.required = The parameter ${name} must be filled.
PerformanceData.flags = Flags
PerformanceFlag.academy-user = Uses Video Academy
PerformanceFlag.academy-users = Uses Video Academy
PerformanceFlag.active-user = Active
PerformanceFlag.active-users = Has active users
PerformanceFlag.custom-scripts = Uses customer scripting
PerformanceFlag.frequent-user = Regularly active
Permission.administrator = Administrator
Permission.administrator.description = Allows the user to change system settings.
Permission.feature-bypass-process-log-limits = Parameters for process message limitation
Permission.feature-bypass-process-log-limits.description = Allows users to bypass process message limitations via job parameters.
Permission.feature-provide-jobs = Provides jobs
Permission.file-manager = Manage files
Permission.file-manager.description = Enables you to maintain files in the file repository.
Permission.jobs-execution = Execute jobs
Permission.jobs-execution.description = Allows the user to execute jobs.
Permission.jobs-manager = Manage Jobs
Permission.jobs-manager.description = Allows the user to execute jobs, view all execution logs and schedule automatic executions.
Permission.system-administrator = Manage system
Permission.system-administrator.description = Allows the user to call up all system functions, change system settings and change the list of system users.
Permission.user-administrator = Manage users
Permission.user-administrator.description = Allows users to create or edit.
PermissionData.permissions = Permissions
PersistencePeriod.FOURTEEN_DAYS = 14 days
PersistencePeriod.ONE_DAY = 1 day
PersistencePeriod.ONE_MONTH = 1 month
PersistencePeriod.ONE_YEAR = 1 year
PersistencePeriod.SIX_YEARS = 6 years
PersistencePeriod.TEN_YEARS = 10 years
PersistencePeriod.THREE_DAYS = 3 days
PersistencePeriod.THREE_MONTHS = 3 months
PersistencePeriod.THREE_YEARS = 3 years
PersonData.birthday = Birthday
PersonData.firstname = First name
PersonData.invalidSalutation = Invalid value in the salutation field: ${error}
PersonData.lastname = Last name
PersonData.offline = offline
PersonData.salutation = Salutation
PersonData.title = Title
Process = Process
Process.associatedProcesses = Job logs
Process.autoRefresh = Auto-Refresh
Process.awaitingSideTaskCompletion = Wait until all background tasks are completed ...
Process.completed = Completed
Process.counters = Performance
Process.errorneous = Erroneous
Process.expires = Planned deletion time
Process.externalLinks = External links
Process.files = Files
Process.isRunning = is running
Process.lastInteraction = Last interaction
Process.lastLogs = Latest messages
Process.logs = Messages
Process.numLogs = Messages
Process.outputs = expenditure
Process.persistencePeriod = Retention period
Process.plural = Processes
Process.processType = Type
Process.rowsExported = Rows exported: ${rows}
Process.runtime = Runtime
Process.scheduled = Scheduled
Process.started = Started
Process.state = Status
Process.stateMessage = Last status
Process.tenantId = Tenant ID
Process.tenantName = Tenant
Process.title = Name
Process.userName = User
Process.warnings = Warnings
ProcessController.disableDebugging = Disable debugging
ProcessController.enableDebugging = Enable debugging
ProcessController.export = Export
ProcessController.exportLogsReason = Exporting messages as a file
ProcessController.exportOutputReason = Export '${output}' to file
ProcessController.exportStarted = The export has been started, the result file is attached to this process.
ProcessController.logUpdated = The status has been updated.
ProcessController.reference = Reference
ProcessController.sortAsc = Oldest first
ProcessController.sortDesc = Newest first
ProcessController.unknownAction = Unknown action: ${action}
ProcessController.unknownOutput = Unknown output: ${output}
ProcessDurationChart.description = Shows the duration in minutes of the background processes that were completed in the selected period.
ProcessDurationChart.label = Duration of background processes (system-wide)
ProcessDurationForTenantChart.description = Shows the duration in minutes of the background processes that were completed in the selected period.
ProcessDurationForTenantChart.label = Duration of background processes
ProcessLog.actionMarkIgnored = Ignore
ProcessLog.actionMarkOpen = Reopen
ProcessLog.actionMarkResolved = Resolve
ProcessLog.format = Message from process ${process} (${timestamp})
ProcessLog.message = Message
ProcessLog.messageType = Message type
ProcessLog.node = Machine
ProcessLog.parameterHeading.NORMAL = parameter
ProcessLog.parameterHeading.SYSTEM = System parameters
ProcessLog.plural = Messages
ProcessLog.process = Process
ProcessLog.state = Status
ProcessLog.systemMessage = System message
ProcessLog.timestamp = Time
ProcessLog.type = Type
ProcessLogState.IGNORED = Ignored
ProcessLogState.OPEN = Open
ProcessLogState.RESOLVED = Resolved
ProcessLogType.ERROR = Error
ProcessLogType.INFO = Information
ProcessLogType.SUCCESS = Successful
ProcessLogType.WARNING = Warning
ProcessState.CANCELED = Canceled
ProcessState.RUNNING = Active
ProcessState.STANDBY = Standby
ProcessState.TERMINATED = Completed
Processes.messageLimitReached = The message '${type}' occurred a total of ${count} times. For the sake of clarity, only the first ${limit} occurrences have been recorded.
Processes.restarted = The process was restarted: ${reason}
ProfileController.invalidOldPassword = The old password is incorrect.
ProfileController.myProfile = My profile
ProfileController.userProfile = User profile
ProgressTracker.state = Progress: ${progress}%[ | still ${remaining}][ (${completion})][ — ${message}]
ProgressTracker.total = Duration: ${total}[ — ${message}]
RateLimitEventsReportJobFactory.description = Lists when functions or calls were blocked because a rate limiting became active.
RateLimitEventsReportJobFactory.description.filtered = Lists for the selected data object when functions or calls were blocked because a rate limiting was active.
RateLimitEventsReportJobFactory.label = Rate Limit Events
RateLimitEventsReportJobFactory.label.filtered = Rate Limit Events (filtered)
RateLimitReportJobFactory.description = Shows the currently set rate limits for you.
RateLimitReportJobFactory.label = Rate Limit Status
RedisController.redis = Redis
ReindexJobFactory.descriptorParameter = Scheme
RequiredCheck.errorMsg = The field is a mandatory field and must not be empty.
RequiredCheck.remark = This field is a mandatory field.
SAMLController.loginViaSAML = Registration via SAML
SAMLController.samlRedirect = SAML registration was successful. You will be redirected?
SQLCodeListExportJobFactory.description = Exports a code list as CSV or Excel file.
SQLCodeListExportJobFactory.label = Export code list
SQLCodeListImportJobFactory.description = Imports a code list from a CSV or Excel file.
SQLCodeListImportJobFactory.label = Import code list
SQLTenantExportJobFactory.description = Exports clients to a CSV or Excel file.
SQLTenantExportJobFactory.label = Export clients
SQLUserAccountExportJobFactory.description = Exports users to a CSV or Excel file.
SQLUserAccountExportJobFactory.label = Exporting users
SQLUserAccountImportJobFactory.description = Imports user accounts using a CSV or Excel file.
SQLUserAccountImportJobFactory.label = Import user accounts
ScheduleInterval.DAILY = Daily
ScheduleInterval.MONTHLY = Monthly
SchedulerController.parameters = Parameters
SchedulerController.planning = Planning
SchedulerData.dayOfMonth = Day
SchedulerData.dayOfMonth.help = Specify the day on which the job is to be executed. Possible values are 1-31, use * for any day. Use /N to select days divisible by N. Separate multiple values with a comma.
SchedulerData.dayOfWeek = Weekday
SchedulerData.dayOfWeek.help = Enter the day of the week on which the job is to be executed. Possible values are 1-7, where 1 stands for Monday. Use * for any day of the week. Use /N to select weekdays divisible by N. Separate multiple values with a comma.
SchedulerData.enabled = Activated
SchedulerData.enabled.false = Inactive
SchedulerData.enabled.help = Select here whether automatic execution is currently active or paused.
SchedulerData.enabled.true = Active
SchedulerData.hourOfDay = hour
SchedulerData.hourOfDay.help = Enter the hours in which the job should be executed. Possible values are 0-23. Use * for any hours. Use /N to select hours that are divisible by N. Separate multiple values with a comma.
SchedulerData.minute = Minute
SchedulerData.minute.help = Enter the minute in which the job should be executed. Possible values are 0-59. Use * for any minutes. Use /N to select minutes divisible by N. Separate multiple values with a comma.
SchedulerData.month = month
SchedulerData.month.help = Enter the month in which the job is to be executed. Possible values are 1-12, where 1 stands for January. Use * for any month. Use /N to select months divisible by N. Separate multiple values with a comma.
SchedulerData.runs = Remaining remarks
SchedulerData.runs.help = Specify here whether the system should stop executing this job after a certain number of executions. Leave the field blank for an unlimited number of executions.
SchedulerData.userId = User
SchedulerData.userId.help = Select here as which user the job should be started. Make sure that the user is not locked and has all the required authorizations.
SchedulerData.year = Year
SchedulerData.year.help = Enter the year in which the job should be executed. Use * for any year. Separate multiple values with a comma.
SchedulerEntry.continue = Continue
SchedulerEntry.create = New planned execution
SchedulerEntry.dayOfMonth = Day
SchedulerEntry.dayOfWeek = Weekday
SchedulerEntry.enabled = Activated
SchedulerEntry.hourOfDay = hour
SchedulerEntry.invalidPattern = The input '${pattern}' is invalid, please refer to the field notes.
SchedulerEntry.invalidPatternInField = Invalid value in field ${field}: ${msg}
SchedulerEntry.lastExecution = Last execution
SchedulerEntry.minute = Minute
SchedulerEntry.month = month
SchedulerEntry.numberOfExecutions = Number of executions
SchedulerEntry.performedExecutions = Executions
SchedulerEntry.plural = Planned executions
SchedulerEntry.runs = Remaining executions
SchedulerEntry.year = Year
ScopeDefaultConfigController.showDefaultConfig = default configuration
ScriptingController.jobMessage = Script with ID '${job}' was executed.
StandardCategories.misc = General
StandardCategories.monitoring = Monitoring
StandardCategories.systemAdministration = system administration
StandardCategories.usersAndTenants = Users & Clients
Storage.uploadFailed = An error occurred during upload: ${errorMessage} (${errorClass})
StorageController.buckets = File storage
StorageController.cannotAccessBucket = You may not access the contents of ${bucket} because you have not the required permissions or because it does not exist.
StorageController.objects = Files
StorageController.uploadFile = Upload file
StoredIncident = Error
StoredIncident.category = Category
StoredIncident.firstOccurrence = For the first time
StoredIncident.lastOccurrence = Last time
StoredIncident.location = Error source
StoredIncident.mdc.name = Name
StoredIncident.mdc.value = Value
StoredIncident.message = Report
StoredIncident.node = Machine
StoredIncident.numberOfOccurrences = Quantity
StoredIncident.plural = Error log
StoredIncident.stack = Stacktrace
StoredIncident.user = User
StoredObject.URL = URL
StoredObject.cancelUpload = Cancel
StoredObject.errEmpty = File is empty
StoredObject.errInvalidExtension = Invalid file type
StoredObject.errTooLarge = file too large
StoredObject.errTooSmall = file too small
StoredObject.resetBtn = Reset
StoredObject.saveHint = The changes only take effect after saving.
StoredObject.specifyURL = Specify URL
StoredObject.uploadArea = Drag files here to upload them?
StoredObject.uploadBtn = Select file?
StoredObject.uploadFailed = Upload failed
SubScope.api.name = Rest API
SubScope.empty.name = Nothing
SubScope.ui.name = Web UI
SubScope.vfs.name = Filesystem (FTP, SFTP, SCP)
SyncMode.DELETE_EXISTING = Delete only specified records
SyncMode.NEW_AND_UPDATE_ONLY = Just create and update
SyncMode.NEW_ONLY = Just create
SyncMode.SYNC = Synchronize (Create, Update, Clean Existing)
SyncMode.UPDATE_ONLY = Update only
SyncSourceDeleteMode.ALL = Clean up regardless of the source (caution!)
SyncSourceDeleteMode.SAME_SOURCE = Same source clean only
SyncSourceDeleteMode.SAME_SOURCE_OR_EMPTY = Clean only if source is same or source is empty
Tenant.administration = Administration
Tenant.parent = Parent tenant
Tenant.parent.help = If a parent tenant is specified, certain data objects are obtained from this tenant and administration is possible.
Tenant.permissions = Permissions
Tenant.plural = Tenants
Tenant.saml = Authentication via SAML 2.0
Tenant.select = Switch tenant
Tenant.selectMain = Main tenant
Tenant.suffixDays = Days
TenantAware.invalidTenant = Error in field '${field}': The object must belong to the same tenant.
TenantController.cannotBecomeTenant = You cannot manage the selected tenant.
TenantController.cannotDeleteSelf = You cannot delete your own tenant.
TenantController.delete = Delete…
TenantController.edit = Edit
TenantController.select = Take over
TenantData.accountNumber = Customer number
TenantData.canAccessParent = Administration of the parent tenant
TenantData.canAccessParent.help = Allows users of this tenant to manage the parent tenant.
TenantData.externalLoginIntervalDays = Interval for external login
TenantData.externalLoginIntervalDays.help = Controls after how many days a user, for whom "External Login Required" is active, must authenticate again via an external system.
TenantData.fullName = Full company name
TenantData.fullName.help = Contains the full name of the company.
TenantData.image = Company logo
TenantData.ipRange = IP range
TenantData.ipRange.help = If filled, all but the configured roles are taken from the user, the user should not have an IP within the configured IP range. Several ranges can be specified, separated by a comma.
TenantData.loginIntervalDays = Login Interval
TenantData.loginIntervalDays.help = Specifies the maximum number of days that a user remains logged in. After that, he or she must log on again.
TenantData.name = Display name
TenantData.name.help = Contains the name which is displayed in the system.
TenantData.parentCanAccess = Management by the parent tenant
TenantData.parentCanAccess.help = Allows users of the parent tenant to manage this tenant.
TenantData.rolesToKeep = Non-removable roles
TenantData.rolesToKeep.help = Roles listed here (comma separated) are not withdrawn from the users if they do not access from any configured IP range.
TenantData.samlFingerprint = SAML Fingerprint
TenantData.samlFingerprint.help = Specifies the SHA1 fingerprint of the X509 certificate with which the SAML provider signs a login. If multiple SAML providers are used, separate individual values with a comma. This is particularly useful during certificate rollover, as both certificates can be accepted. Only letters and numbers are allowed.
TenantData.samlIssuerIndex = SAML applicant index
TenantData.samlIssuerIndex.help = Specifies the index under which this system is managed by the SAML provider. The default is <b>0</b>.
TenantData.samlIssuerName = SAML Provider Name
TenantData.samlIssuerName.help = Specifies the name of the issuing SAML provider. <i>Example: https://my-domain.local/adfs/services/trust</i> - If multiple SAML providers are used, separate individual values with a comma.
TenantData.samlIssuerUrl = SAML-URL
TenantData.samlIssuerUrl.help = Specifies the SAML call URL for login. <i>Example: https://my-domain.local/adfs/ls</i>
TenantData.samlRequestIssuerName = SAML applicant
TenantData.samlRequestIssuerName.help = Specifies the name under which this system is listed with the SAML provider.
Tenants.invalidTenant = This data object belongs to another tenant and must not be edited.
TimeSeries.comparisonDataset = Comparison period
TimeSeries.currentDataset = Current period
TimeSeriesChartFactory.hintMonthlyValuesOnly = This evaluation is only possible on a monthly basis.
TimeSeriesChartFactory.hintSomeMonthlyValues = This evaluation contains individual values that are only available on a monthly basis.
TimeSeriesChartFactory.noComparisonSupported = This evaluation does not support comparison periods.
TimeSeriesChartJobFactory.comparisonPeriod = Comparison period
TimeSeriesChartJobFactory.currentPeriod = Current period
TimeseriesDataProvider.end = Until
TimeseriesDataProvider.start = From
TimeseriesDataProvider.unit = Unit
TraceData.changed = Last change
TraceData.changedAt = Last changed at
TraceData.changedBy = Last change by
TraceData.created = Created
TraceData.createdAt = Created on
TraceData.createdBy = Created by
TraceData.entity = Entity-ID
TraceData.infos = Information
TransferFilesJob.description = Moves or copies one or more files or directories.
TransferFilesJob.destination = aim
TransferFilesJob.detailDescription = Copies or moves a single file or directory to another. Furthermore, the complete contents (all files and subdirectories) of one directory can be copied or moved to another. If directory contents are copied or moved, a directory must be selected as the source and target.
TransferFilesJob.illegalDestination = Invalid destination directory: '${destinationFile}'. When directory contents are copied or moved, both the source and the target must be a directory.
TransferFilesJob.illegalSource = Invalid source directory: '${sourceFile}'. When directory contents are copied or moved, both the source and the target must be a directory.
TransferFilesJob.label = Copy / move files or directories
TransferFilesJob.mode = mode
TransferFilesJob.smartTransfer = Copy only if changed
TransferFilesJob.source = source
TransferMode.COPY = Copy
TransferMode.COPY_CONTENTS = Copy directory contents
TransferMode.MOVE = Move
TransferMode.MOVE_CONTENTS = Move directory contents
Translations.invalidLanguage = Invalid value '${language}' as language code in field '${field}'.
Unit.DAY = Days
Unit.HOUR = Hours
Unit.MONTH = Months
Unit.WEEK = Weeks
Unit.YEAR = Years
UpdatesReport.anonymous = Anonymous access
UpdatesReport.description = Lists all news or update articles that have been clicked on in the last 6 months.
UpdatesReport.end = Period until
UpdatesReport.guid = GUID
UpdatesReport.label = Updates Report
UpdatesReport.loggedIn = Registered users
UpdatesReport.start = Period of
UpdatesReport.total = Accesses
UpdatesReport.totalClicks = Sum of hits
UserAccount.changePassword = Change Password
UserAccount.email.help = The email address is required so that the system can inform the user about important events.
UserAccount.externalLoginMustBePerformed = You must authenticate yourself via an external system.
UserAccount.forcedExternalLoginNear = For security reasons, you will have to log in again via your external system soon. You can now log on again to set the time yourself.
UserAccount.forcedLogoutNear = For security reasons you will have to register again soon. You can now log in again to set the time yourself.
UserAccount.invalidOldPassword = The old password is incorrect.
UserAccount.plural = Users
UserAccount.roles = Permissions
UserAccount.security = Security
UserAccount.select = Take over user
UserAccount.selectMain = Switch to own user
UserAccount.username.help = With this unique name, the user logs into the system. If the form field is empty, the email address will be used (recommended).
UserAccount.warnAboutGeneratedPassword = Your password has been automatically assigned by the system. Please change your password timely.
UserAccountConroller.cannotGeneratePasswordForOwnUser = You cannot generate a password for your own user. Use the 'Change password' function.
UserAccountConroller.passwordGenerated = A password has been generated.
UserAccountConroller.passwordGeneratedAndSent = A password has been generated and sent to '${email}'.
UserAccountConroller.select = Take over
UserAccountController.cannotBecomeUser = You cannot take over the selected user.
UserAccountController.cannotDeleteSelf = You cannot delete your own user account.
UserAccountController.cannotLockSelf = You cannot lock your own user account.
UserAccountController.forgotPassword.reason = Your password has been reset by the "Forgot Password" function. (Triggered by IP: ${ip}).
UserAccountController.forgotPassword.subject = Your password has been reset
UserAccountController.generatedPassword.reason = Please log in to use ${product}.
UserAccountController.generatedPassword.subject = Your access data for ${product}
UserAccountController.logout = Log out
UserAccountController.noUserFoundForEmail = No user was found with the entered email address.
UserAccountController.tooManyUsersFoundForEmail = Several users were found with the entered email address.
UserAccountData.externalLoginRequired = External login required
UserAccountData.externalLoginRequired.help = Specifies whether the user must authenticate himself or herself via an external system at the interval specified by the client.
UserAccountData.image = Profile picture
UserAccountData.subScopes = Access areas
UserAccountData.subScopes.help = Here, select the areas to which the user should be <b> restricted </b>. Leave the field blank so that the user has access to all areas.
VFSController.actions = Actions
VFSController.copyPath = Copy filepath
VFSController.createDirectory = New directory
VFSController.createFile = New file
VFSController.directory = Directory
VFSController.directoryCreated = The directory was created.
VFSController.extract = Unzip
VFSController.extracted = The file was extracted successfully.
VFSController.move = Move
VFSController.moveProcess = protocol
VFSController.moved = The file was moved successfully.
VFSController.movedInProcess = The file or directory is moved in the background.
VFSController.rename = Rename
VFSController.renamed = The file was successfully renamed.
VFSController.root = Files
VFSController.selectDirectory = Select directory
VFSController.selectFile = Choose a file
VFSController.selectFileOrDirectory = Select file or directory
VFSController.unknownPath = The path '${path}' does not exist.
ValueInListCheck.errorMsg = The value '${value}' is not allowed for this field.
ValueInListCheck.remark = Allowed values: ${values}
VersionedFile.plural = Versions
VersionedFiles.noVersion = No version found
VersionedFiles.versionExistsConflict = The version ${date} for the path ${uniqueIdentifier} already exists and therefore cannot be used.
VirtualFile.cannotCreateAsDirectory = The directory '${file}' could not be created.
VirtualFile.cannotDelete = The file '${file}' could not be deleted.
VirtualFile.cannotRead = The file '${file}' cannot be read.
VirtualFile.cannotRename = The file '${file}' could not be renamed.
VirtualFile.cannotRename.invalidName = The file '${file}' could not be renamed because the selected name contains invalid characters.
VirtualFile.cannotResolveChild = The path '${child}' cannot be resolved into '${path}'.
VirtualFile.cannotWrite = You cannot write to the file '${file}'.
VirtualFile.directoryDoesNotExist = The directory '${file}' does not exist.
VirtualFile.downloadFailed = Error downloading '${url}': ${errorMessage}
VirtualFile.fileDoesNotExist = The file '${file}' does not exist.
VirtualFile.fileDownloadSkipped = Skipped download
VirtualFile.fileDownloaded = File download
VirtualFile.lastModified = Last modified
VirtualFile.loadFromUrl.noValidPath = A file path could not be "${url}".
VirtualFile.loadFromUrl.noValidPathWithoutDownload = If the download is deactivated, no file path can be generated "${url}"
VirtualFile.loadFromUrlDisabled = File download disabled
VirtualFile.loadFromUrlFailed = File download failed
VirtualFile.noDirectory = '${file}' is not a directory.
VirtualFile.noFile = '${file}' is not a file.
VirtualFile.onlyOneFile = Only one file can be uploaded at a time.
VirtualFile.readOnly = Read-only
VirtualFile.size = Size
VirtualFile.unlock = Unlock
VirtualFileExtractionJob.destinationParameter = Target directory
VirtualFileSystem.invalidPath = The path is invalid and cannot be resolved: ${path}
VirtualObject.download = Download
VirtualObject.fileSize = Size
VirtualObject.physicalKey = Physical key
VirtualObject.plural = Files
VirtualObject.publicUrl = Public URL
VirtualObject.rename = Rename
VirtualObject.replaceContents = Replace contents
VirtualObject.unreference = Delete reference
VirtualObject.versions = Versions
XMLExportJobFactory.requireValidFile = Validate
XMLExportJobFactory.requireValidFile.help = Validates the exported file using the predefined XSD schema.
XMLImportJob.invalidXMLDetected = The import of the file '${fileName}' was canceled because it is invalid in relation to the predefined XML schema.
XMLImportJobFactory.xsdSchema = Check XML schema
XMLImportJobFactory.xsdSchema.help = If one of the specified XML schemes is selected, the import will only take place if the file corresponds to the specified structure.
XMLValidatorErrorHandler.error = An error occurred during validation in line ${line}: ${message}
XMLValidatorErrorHandler.error.messageType = XSD Validation
footer.html.supportLinkCopiedSuccessfully = Support link copied to clipboard
mail-password.loginHere = Sign in here
mail-password.password = Password
mail-password.username = Username or email
mail-password.yourCredentails = Your login data
mail.hello = Hello
