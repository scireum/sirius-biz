<i:arg name="name" type="String"/>
<i:arg name="value" type="sirius.biz.codelists.LookupValue"/>
<i:arg name="labelKey" type="String" default=""/>
<i:arg name="label" type="String" default="@i18n(labelKey)"/>
<i:arg name="helpKey" type="String" default=""/>
<i:arg name="help" type="String" default="@i18n(helpKey)"/>
<i:arg name="optional" type="boolean" default="false"/>
<i:arg name="readonly" type="boolean" default="false"/>
<i:arg name="showSelectionButton" type="boolean" default="true"/>
<i:arg name="table" type="String" default="@value.getTableName()"/>
<i:arg name="id" type="String" default="@generateId('singleselect-%s')"/>
<i:arg name="allowCustomEntries" type="boolean" default="@value.acceptsCustomValues()"/>
<i:arg name="class" type="String" default="" description="Lists additional CSS classes to apply to the field."/>


<i:pragma name="inline" value="true"/>
<i:pragma name="description" value="Renders a dropdown field for a LookupValue field"/>


<t:singleSelect name="@name"
                label="@label"
                help="@help"
                optional="@optional"
                readonly="@readonly"
                id="@id"
                allowCustomEntries="@allowCustomEntries"
                class="@class"
                suggestionUri="@apply('/system/lookuptable/autocomplete/%s/%s/%s', table, value.getDisplay(), value.getExtendedDisplay())">
    <i:block name="addon">
        <i:if test="showSelectionButton">
            <a class="btn btn-outline-secondary" id="@id-addon" tabindex="0"><i class="fa-solid fa-bolt"></i></a>
        </i:if>
    </i:block>
    <i:block name="script">
        <i:if test="showSelectionButton">
            const helper = document.getElementById('___id-addon');
            helper.addEventListener('click', getLookupTableInfo);
            helper.addEventListener('keydown', function (e) {
                if (event.key === sirius.key.ENTER) {
                    getLookupTableInfo();
                }
            });
            function getLookupTableInfo() {
                return new LookupTableInfo({
                           tableName: '___table',
                           labelFormat: '___value.getDisplay()',
                           codeCallback: function (code, name) {
                               @if (!readonly) {
                                   autocomplete.val({value: code, text: name});
                               }
                           }
                       });
            }
        </i:if>
        <i:render name="script"/>
    </i:block>
    <i:block name="autocompleteOptions">
        <i:render name="autocompleteOptions"/>
    </i:block>

    <i:if test="Strings.isFilled(value.getValue())">
        <option value="@value.getValue()" selected>
            @value.resolveDisplayString()
        </option>
    </i:if>
</t:singleSelect>
