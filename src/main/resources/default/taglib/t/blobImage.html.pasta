<i:arg type="sirius.biz.storage.layer2.URLBuilder" name="urlBuilder"/>
<i:arg type="String" name="style" default=""
       description="Determines the additional styles to apply. Most probably a height should be set here."/>
<i:arg type="String" name="imgStyle" default="max-width: 100%; max-height: 100%;"
       description="Determines the additional style to apply to the img object."/>
<i:arg type="String" name="imgClass" default="" description="Contains additional classes to apply to the img."/>
<i:arg type="String" name="class" default="" description="Contains additional classes to apply."/>
<i:arg type="boolean" name="skipEmpty" default="false"
       description="If set to true, an empty blob will be skipped entirely, instead of rendering the fallback image."/>
<i:arg type="String" name="fallbackUri" default="sirius.biz.storage.layer2.URLBuilder.IMAGE_FALLBACK_URI"
       description="Contains the uri for a fallback image."/>

<i:pragma name="description">
    Renders a BlobVariant image using the given URLBuilder. This will support waiting for conversions
    (and show a spinner while waiting) and also handles missing images and errors gracefully.
</i:pragma>

<i:if test="!skipEmpty || urlBuilder.isFilled()">
    <div class="d-flex flex-column align-items-center justify-content-center display-4 text-black-75 @class"
         style="@style">
        <i:if test="urlBuilder.isConversionExpected()">
            <img class="lazy-image-js @imgClass"
                 style="@imgStyle"
                 src="@urlBuilder.getFallbackUri().orElse(sirius.biz.storage.layer2.URLBuilder.IMAGE_FALLBACK_URI)"
                 data-src="@urlBuilder.buildImageURL()"/>
            <i:else>
                <img class="safe-image-js @imgClass"
                     style="@imgStyle"
                     data-fallback="@urlBuilder.getFallbackUri().orElse(sirius.biz.storage.layer2.URLBuilder.IMAGE_FALLBACK_URI)"
                     src="@urlBuilder.buildImageURL()"/>
            </i:else>
        </i:if>
    </div>
</i:if>
