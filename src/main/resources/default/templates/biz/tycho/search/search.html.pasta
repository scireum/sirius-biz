<i:arg type="String" name="query"/>
<t:page titleKey="OpenSearchController.label">
    <i:block name="head">
        <script type="text/javascript" src="/assets/libs/oboe/oboe.min.js"></script>
    </i:block>
    <i:block name="breadcrumbs">
        <li>
            <a href="/open-search">@i18n('OpenSearchController.label')</a>
        </li>
    </i:block>

    <i:block name="page-header">
        <t:pageHeader titleKey="OpenSearchController.label"/>
    </i:block>

    <div class="card mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-8 col-lg-9">
                    <div class="input-group">
                        <input type="text"
                               id="queryField"
                               class="form-control primary-autofocus-js"
                               value="@query"
                               placeholder="@i18n('NLS.searchkey')"/>
                        <a id="searchBtn"
                           class="btn btn-outline-secondary cursor-pointer">
                            <i class="fa-solid fa-magnifying-glass search-button-js"></i>
                            <i class="fa-solid fa-spinner fa-spin d-none searching-button-js"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="results"></div>

    <script type="text/javascript">
        sirius.ready(function () {
            document.querySelector('#searchBtn').addEventListener('click', submitQuery);
            sirius.addEnterListener(document.querySelector('#queryField'), submitQuery);

            submitQuery();
        });

        function submitQuery() {
            document.querySelector('#results').innerHTML = '';

            const query = document.querySelector('#queryField').value;
            if (sirius.isEmpty(query)) {
                return;
            }

            oboe("/open-search/api?query=" + encodeURIComponent(query))
                .start(() => {
                    document.querySelector('#searchBtn svg.search-button-js').classList.add('d-none');
                    document.querySelector('#searchBtn svg.searching-button-js').classList.remove('d-none');
                })
                .node('!', node => {
                    if (node.completed) {
                        // We need to perform this async somehow...
                        setTimeout(function () {
                            document.querySelector('#searchBtn svg.search-button-js').classList.remove('d-none');
                            document.querySelector('#searchBtn svg.searching-button-js').classList.add('d-none');
                        }, 0);
                        return;
                    }

                    try {
                        // the auxiliary div is used to convert the rendered mustache into a DOM node
                        const _auxiliary = document.createElement("div");

                        let _category = document.querySelector('#results *[data-category="' + node.category + '"]');
                        if (!_category) {
                            _auxiliary.innerHTML = Mustache.render('' +
                                '<div class="category" data-category="{{category}}" data-priority="{{priority}}">' +
                                '   <div><a href="{{categoryUrl}}"><h2>{{category}}</h2></a></div>' +
                                '   <div class="row row-cols-1 row-cols-lg-2 row-cols-xl-3 items"></div>'
                                , node);
                            _category = _auxiliary.childNodes[0];

                            let inserted = false;
                            document.querySelectorAll('#results .category').forEach(_otherCategory => {
                                if (!inserted && _otherCategory.dataset.priority > node.priority) {
                                    _otherCategory.before(_category);
                                    inserted = true;
                                }
                            });
                            if (!inserted) {
                                document.querySelector('#results').appendChild(_category);
                            }
                        }

                        _auxiliary.innerHTML = Mustache.render(
                            '<div class="col mb-4">' +
                            '   <div class="card card-border h-100">' +
                            '       <div class="card-body">' +
                            '           <h5 class="card-title">{{label}}</h5>' +
                            '           <div>{{{htmlDescription}}}</div>' +
                            '           <a href="{{url}}" class="stretched-link"></a>' +
                            '        </div>' +
                            '    </div>' +
                            '</div>', node);
                        _category.querySelector('.items').appendChild(_auxiliary.childNodes[0]);
                    } catch (e) {
                        console.error(e);
                    }
                });
        }
    </script>
</t:page>
