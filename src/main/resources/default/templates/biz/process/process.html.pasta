<i:arg type="sirius.biz.process.Process" name="process"/>
<i:arg type="String" name="page"/>

<t:page title="@process.getTitle()">
    <i:block name="breadcrumbs">
        <li>
            <a href="/ps">@i18n("Process.plural")</a>
        </li>
        <li>
            <a href="/ps/@process.getId()">@process.getTitle()</a>
        </li>
    </i:block>

    <i:block name="page-header">
        <t:pageHeader>
            <i:block name="title">
                <span class="d-flex flex-row align-items-center">
                    <i:if test="process.getState() == sirius.biz.process.ProcessState.RUNNING">
                        <span class="pr-2 text-black-75 text-small"><i class="fa fa-sync fa-spin"></i></span>
                    </i:if>
                    <span>@process.getTitle()</span>
                </span>
            </i:block>
            <i:block name="actions">
                <i:if test="process.shouldAutorefresh()">
                    <a id="disableAutoRefresh"
                       class="btn btn-link d-none"
                       href="#">
                        @i18n("Process.disableAutoRefresh")
                    </a>
                    <a id="enableAutoRefresh"
                       class="btn btn-link d-none"
                       href="#">@i18n("Process.enableAutoRefresh")
                    </a>
                </i:if>
                <i:render name="header-actions"/>
            </i:block>
            <i:block name="additionalActions">
                <i:if test="process.getState() == sirius.biz.process.ProcessState.RUNNING || process.getState() == sirius.biz.process.ProcessState.STANDBY">
                    <i:if test="process.isDebugging()">
                        <t:dropdownItem labelKey="ProcessController.disableDebugging"
                                        permission="permission-manage-processes"
                                        url="@apply('/ps/%s/toggleDebugging', process.getId())"/>
                        <i:else>
                            <t:dropdownItem labelKey="ProcessController.enableDebugging"
                                            permission="permission-manage-processes"
                                            url="@apply('/ps/%s/toggleDebugging', process.getId())"/>
                        </i:else>
                    </i:if>
                </i:if>
                <i:if test="process.getState() == sirius.biz.process.ProcessState.RUNNING">
                    <t:dropdownItem labelKey="NLS.cancel" url="@apply('/ps/%s/cancel', process.getId())"
                                    class="text-sirius-red danger"/>
                </i:if>
            </i:block>

            <t:dot color="@process.getStateColor()">@process.getState()</t:dot>
            <i:if test="process.isWarnings()">
                <t:tag color="yellow">@i18n("Process.warnings")</t:tag>
            </i:if>
            <i:if test="process.isErrorneous()">
                <t:tag color="red">@i18n("Process.errorneous")</t:tag>
            </i:if>
            <t:iconInlineInfo icon="fa fa-user">
                <t:smartValue type="user-account" payload="@process.getUserId()" label="@process.getUserName()"/>
                <i:if test="isFilled(process.getTenantId()) && user().getTenantId() != process.getTenantId()">
                    (<t:smartValue type="tenant" payload="@process.getTenantId()" label="@process.getTenantName()"/>)
                </i:if>
            </t:iconInlineInfo>
            <i:if test="process.getState() == sirius.biz.process.ProcessState.STANDBY">
                <t:iconInlineInfo icon="fa fa-wave-square">
                    <t:smartFormatTemporal date="process.getStarted()"/>
                </t:iconInlineInfo>
                <i:else>
                    <t:iconInlineInfo icon="fa fa-clock">
                        <div class="cycle-js link"
                             data-cycle="@process.getStartedAsString() - @process.getCompletedAsString()">
                            @toSpokenDate(process.getStarted())
                            <i:if test="isFilled(process.getRuntimeAsString())">
                                (@process.getRuntimeAsString())
                            </i:if>
                        </div>
                    </t:iconInlineInfo>
                </i:else>
            </i:if>
        </t:pageHeader>
    </i:block>

    <t:sidebar>
        <i:block name="sidebar">
            <t:infobox labelKey="Process.counters">
                <i:for type="String" var="counter" items="process.getCounterList()">
                    <t:infoLine label="@process.getCounterLabel(counter)">
                        <i:local name="timing" value="process.getCounterTiming(counter)"/>
                        <b>@process.getCounterValue(counter)</b>
                        <i:if test="isFilled(timing)">
                            (@timing)
                        </i:if>
                    </t:infoLine>
                </i:for>
            </t:infobox>

            <i:if test="@process.hasVisibleOutputs()">
                <t:navbox labelKey="Process.outputs">
                    <t:navboxLink icon="fa fa-bars" labelKey="ProcessLog.plural"
                                  url="@apply('/ps/%s', process.getId())"
                                  active="page == 'logs'"/>

                    <i:for type="sirius.biz.process.output.ProcessOutput" var="output" items="@process.getOutputs()">
                        <i:if test="@!output.isSystemOutput() || user().hasPermission('permission-manage-all-processes')">
                            <t:navboxLink icon="@output.getIcon()" label="@output.getLabel()"
                                          url="@apply('/ps/%s/output/%s', process.getId(), output.getName())"
                                          active="page == 'output-' + output.getName()"/>
                        </i:if>
                    </i:for>

                    <i:extensions target="process" point="sidebar-menu" process="@process"/>
                </t:navbox>
            </i:if>

            <i:extensions target="process" point="sidebar-top" process="@process"/>
            <i:render name="sidebar"/>

            <t:navbox labelKey="Process.externalLinks">
                <i:for type="sirius.biz.process.ProcessLink" var="link" items="process.getLinks()">
                    <t:navboxLink icon="fa fa-external-link-alt" url="@link.getUri()" label="@link.getLabel()"/>
                </i:for>
            </t:navbox>

            <t:navbox labelKey="Process.files">
                <i:for type="sirius.biz.storage.layer2.Blob" var="file" items="process.getFiles().findAttachedBlobs()">
                    <i:local name="url" value="file.url().enableLargeFileDetection().asDownload().buildURL()"/>
                    <i:if test="url.isPresent()">
                        <t:navboxLink icon="fa fa-file" url="@url.get()">
                            @file.getFilename()
                            <span class="text-small text-muted">(@formatSize(file.getSize()))</span>
                        </t:navboxLink>
                    </i:if>
                </i:for>
            </t:navbox>


            <i:extensions target="process" point="sidebar-bottom" process="@process"/>

            <w:jobs target="process"/>
        </i:block>

        <i:if test="isFilled(process.getStateMessage())">
            <t:helpbox>
                <i class="fa fa-info-circle"></i> <b>@i18n("Process.stateMessage"):</b>
                @process.getStateMessage()
            </t:helpbox>
        </i:if>

        <i:render name="body"/>
    </t:sidebar>

    <i:if test="process.shouldAutorefresh()">
        <script type="text/javascript">
            sirius.ready(function () {
                let autoRefreshStorageVariableName = "ps.isAutoRefreshEnabled";
                let isAutoRefreshEnabled = sirius.readLocalStore(autoRefreshStorageVariableName) === "true" ? true : false;

                let _enableAutoRefresh = document.getElementById("enableAutoRefresh");
                let _disableAutoRefresh = document.getElementById("disableAutoRefresh");

                if (isAutoRefreshEnabled === true) {
                    _disableAutoRefresh.classList.remove("d-none");
                } else {
                    _enableAutoRefresh.classList.remove("d-none");
                }

                _enableAutoRefresh.onclick = function (event) {
                    event.preventDefault();
                    isAutoRefreshEnabled = true;
                    sirius.writeLocalStore(autoRefreshStorageVariableName, true);
                    _enableAutoRefresh.classList.add("d-none");
                    _disableAutoRefresh.classList.remove("d-none");
                };

                _disableAutoRefresh.onclick = function (event) {
                    event.preventDefault();
                    isAutoRefreshEnabled = false;
                    sirius.writeLocalStore(autoRefreshStorageVariableName, false);
                    _disableAutoRefresh.classList.add("d-none");
                    _enableAutoRefresh.classList.remove("d-none");
                };

                setInterval(function () {
                    if (isAutoRefreshEnabled === true) {
                        window.location.reload();
                    }
                }, 5000);
            });
        </script>
    </i:if>
</t:page>
