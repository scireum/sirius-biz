<i:arg type="int" name="minLength"/>
<i:arg type="int" name="saneLength"/>

<script type="text/javascript">

    sirius.ready(function () {

        const _newPassword = document.getElementById("newPassword");
        const _oldPassword = document.getElementById("oldPassword");
        const _confirmation = document.getElementById("confirmation");
        const _confirmationField = document.getElementById("confirmationField");
        const _submitBtn = document.getElementById("submitBtn");

        function isPasswordInsufficent(value, passwordMinLength) {
            return value.length < passwordMinLength;
        }

        function isPasswordUnsafe(value, passwordSaneLength) {
            return value.length < passwordSaneLength
                || /^[a-z]+$/.test(value) || /^[A-Z]+$/.test(value) || /^[0-9]+$/.test(value);
        }

        function isPasswordMediumSafe(value) {
            return /^[a-zA-Z0-9]+$/.test(value);
        }

        function removeAlertClasses(securityLevels) {
            document.querySelectorAll('.security-level-js').forEach(function (securityLevel) {
                securityLevel.classList.remove("alert-info");
                securityLevel.classList.remove("alert-danger");
                securityLevel.classList.remove("alert-warning");
                securityLevel.classList.remove("alert-success");
            });
        }

        function performPasswordAudit(password) {
            removeAlertClasses();

            if (isPasswordInsufficent(password, ___minLength)) {
                document.getElementById('hilarious').classList.add('alert-danger');
            } else if (isPasswordUnsafe(password, ___saneLength)) {
                document.getElementById('unsafe').classList.add('alert-info');
            } else if (isPasswordMediumSafe(password)) {
                document.getElementById('moderate').classList.add('alert-info');
            } else {
                document.getElementById('stateOfTheArt').classList.add('alert-success');
            }
        }

        function verifyConfirmation(passwordMinLength) {
            return (_newPassword.value === _confirmation.value) && _newPassword.value.length >= passwordMinLength;
        }

        function showPasswordConfirmation(passwordMinLength) {
            if (verifyConfirmation(passwordMinLength)) {
                _confirmationField.classList.remove('has-error');
            } else {
                _confirmationField.classList.add('has-error');
            }
        }

        /**
         * Checks if the password change form can be submitted.
         *
         * Handles the submit button and enables / disables it.
         */
        function verifySubmitable(passwordMinLength) {
            if (_oldPassword.value.length > 0 && verifyConfirmation(passwordMinLength)) {
                _submitBtn.removeAttribute('disabled');
            } else {
                _submitBtn.setAttribute('disabled', 'disabled');
            }
        }

        _newPassword.addEventListener("keyup", function () {
            showPasswordConfirmation(___minLength);
            verifySubmitable(___minLength);
            performPasswordAudit(_newPassword.value);
        });

        _confirmation.addEventListener("keyup", function () {
            showPasswordConfirmation(___minLength);
            verifySubmitable(___minLength);
        });

        _oldPassword.addEventListener("keyup", function () {
            verifySubmitable(___minLength);
        });

        // Reset all alert classes
        removeAlertClasses();
    });
</script>
