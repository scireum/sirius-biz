<i:arg type="sirius.biz.storage.layer3.VirtualFileSystemController" name="controller"/>
<i:arg type="sirius.biz.storage.layer3.VirtualFile" name="dir"/>
<i:arg type="List" name="path"/>
<i:arg type="Page" name="children"/>

<t:page title="@dir.name()">
    <i:block name="breadcrumbs">
        <li>
            <a href="/fs">@i18n("VFSController.root")</a>
        </li>
        <i:for type="sirius.biz.storage.layer3.VirtualFile" var="pathElement" items="path">
            <i:if test="pathElement.parent() != null">
                <li>
                    <a href="/fs?path=@urlEncode(pathElement.path())">@pathElement.name()</a>
                </li>
            </i:if>
        </i:for>
    </i:block>

    <t:pageHeader title="@apply('%s - %s',i18n('VFSController.root'), dir.path())">
        <i:block name="actions">
            <i:if test="dir.canCreateChildren()">
                <a class="btn btn-outline-primary me-2" href="javascript:createDirectory()">
                    <i class="fa-solid fa-folder-plus"></i>
                    <span class="ps-2 d-none d-xl-inline">
                        @i18n("VFSController.createDirectory")
                    </span>
                </a>
                <t:fileUpload btnClass="btn-outline-primary" uploadUrl="@apply('/fs/upload?path=%s', dir.path())"
                              previewsContainer="#sirius-upload-progress"/>
            </i:if>
        </i:block>
    </t:pageHeader>

    <div class="row">
        <div class="col">
            <t:searchHeader page="children" baseUrl="@apply('/fs?path=%s', dir.path())">
                <div class="btn-group me-4"
                     role="group">
                    <a id="move-selected-files-button"
                       class="btn d-inline-flex flex-row align-items-center btn-outline-secondary audit-confirm-link-js disabled"
                       title="@i18n('VFSController.moveSelected')"
                       href="">
                        <i class="fa-solid fa-arrow-right"></i>
                        <span class="d-none d-xl-inline">&nbsp;@i18n('VFSController.moveSelected')</span>
                    </a>
                    <a id="delete-selected-files-button"
                       class="btn d-inline-flex flex-row align-items-center btn-outline-secondary audit-confirm-link-js disabled"
                       title="@i18n('VFSController.deleteSelected')"
                       data-action=""
                       href="">
                        <i class="fa-solid fa-trash fa-fw"></i>
                        <span class="d-none d-xl-inline">&nbsp;@i18n('VFSController.deleteSelected')</span>
                    </a>
                </div>
            </t:searchHeader>

            <div id="sirius-upload-progress" class="mt-3 mb-3 dropzone-items">
                <div class="sirius-upload-hover h-100 d-none flex-column align-items-center justify-content-center">
                    <i class="fa-solid fa-2x fa-cloud-upload-alt"></i>
                    <span>@i18n("template.html.uploadArea")</span>
                </div>
            </div>

            <t:sidebar>
                <i:block name="sidebar">
                    <t:filterbox page="children" baseUrl="@apply('/fs?path=%s', dir.path())"/>
                </i:block>

                <div class="card mb-4">
                    <div class="card-body">
                        <table class="table table-hover ">
                            <t:selectableTableHeaderRow>
                                <th scope="col" class="align-top">
                                    @i18n("Model.name")<br>
                                    <small class="text-muted text-nowrap">@i18n("Model.description")</small>
                                </th>
                                <th scope="col" class="text-end align-top">
                                    @i18n("VirtualFile.size")<br>
                                </th>
                                <th scope="col" class="text-end align-top">
                                    @i18n("VirtualFile.lastModified")<br>
                                </th>
                                <th scope="col" class="align-top">
                                </th>
                            </t:selectableTableHeaderRow>
                            <tbody>
                            <i:if test="dir.parent() != null">
                                <tr>
                                    <td></td>
                                    <td>
                                        <a class="link text-decoration-none"
                                           href="/fs?path=@urlEncode(dir.parent().path())">
                                            <i class="fa-solid fa-folder-open"></i>
                                            <span class="text-decoration-underline">..</span>
                                        </a>
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            </i:if>
                            <i:for type="sirius.biz.storage.layer3.VirtualFile" var="child"
                                   items="children.getItems()">
                                <t:selectableTableRow entityId="@child.path()">
                                    <td>
                                        <div>
                                            <a class="link"
                                               href="/fs?path=@urlEncode(child.path())">
                                                <i:if test="child.isDirectory()">
                                                    <i class="fa-solid fa-folder-open"></i>
                                                    <i:else>
                                                        <i class="fa-solid fa-file"></i>
                                                    </i:else>
                                                </i:if>
                                                <span class="text-decoration-underline">
                                                    @child.name()
                                                </span>
                                                <i:if test="child.readOnly()">
                                                    <div>
                                                        <t:tag color="orange">@i18n("VirtualFile.readOnly")</t:tag>
                                                    </div>
                                                </i:if>
                                            </a>
                                            <div class="col-6">
                                                <small class="text-muted">
                                                    <i:if test="isFilled(child.htmlDescription())">
                                                        <i:raw>@child.htmlDescription()</i:raw>
                                                        <i:else>
                                                            @child.description()
                                                        </i:else>
                                                    </i:if>
                                                </small>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="text-end">
                                        <i:if test="!child.isDirectory()">
                                            @formatSize(child.size())
                                        </i:if>
                                    </td>
                                    <td class="text-end">
                                        <t:smartFormatTemporal date="@child.lastModifiedDate()"/>
                                    </td>
                                    <td class="text-end">
                                        <t:additionalActions labelKey="template.html.additionalActions"
                                                             labelClass="d-none d-xl-inline-block">
                                            <i:if test="!child.readOnly() || child.isDirectory()">
                                                <t:dropdownSection>
                                                    <i:local name="quickActions"
                                                             value="@controller.resolveQuickActionsForFile(child)"/>
                                                    <i:for type="sirius.biz.tycho.QuickAction"
                                                           var="quickAction"
                                                           items="quickActions">
                                                        <t:dropdownItem url="@quickAction.getUrl()"
                                                                        icon="@quickAction.getIcon()"
                                                                        label="@quickAction.getLabel()"/>
                                                    </i:for>
                                                </t:dropdownSection>
                                            </i:if>

                                            <t:dropdownSection>
                                                <i:if test="child.canRename()">
                                                    <t:dropdownItem
                                                            url="@apply('javascript:renameFile(\'%s\', \'%s\')', child.path().replace('\'', '\\\''), child.name().replace('\'', '\\\''))"
                                                            icon="fa-solid fa-tag" labelKey="VFSController.rename"/>
                                                </i:if>
                                                <i:if test="child.canMove()">
                                                    <t:dropdownItem
                                                            url="@apply('javascript:moveFile(\'%s\')', child.path().replace('\'', '\\\''))"
                                                            icon="fa-solid fa-arrow-right"
                                                            labelKey="VFSController.move"/>
                                                </i:if>
                                                <i:if test="!child.isDirectory()">
                                                    <t:dropdownItem
                                                            url="@apply('javascript:sirius.copyToClipboard(\'%s\')', child.path().replace('\'', '\\\''))"
                                                            icon="fa-solid fa-copy" labelKey="VFSController.copyPath"/>
                                                </i:if>
                                            </t:dropdownSection>

                                            <i:if test="child.canDelete()">
                                                <t:dropdownSection>
                                                    <t:dropdownDeleteItem
                                                            url="@apply('/fs/delete?path=%s', urlEncode(child.path()))"
                                                            page="children"/>
                                                </t:dropdownSection>
                                            </i:if>

                                            <t:permission permission="permission-unlock-files">
                                                <i:if test="child.readOnly()">
                                                    <t:dropdownItem
                                                            url="@apply('/fs/unlock?path=%s', urlEncode(child.path()))"
                                                            icon="fa-solid fa-lock-open"
                                                            labelKey="VirtualFile.unlock"/>
                                                </i:if>
                                            </t:permission>
                                        </t:additionalActions>
                                    </td>
                                </t:selectableTableRow>
                            </i:for>
                            </tbody>
                        </table>
                    </div>
                </div>
                <t:pagination page="children" baseUrl="@apply('/fs?path=%s', dir.path())"/>
            </t:sidebar>
        </div>
    </div>
    <form id="rename-form" method="post" action="/fs/rename">
        <t:modal name="rename-modal" titleKey="VFSController.rename" submitKey="NLS.ok" cancelKey="NLS.cancel">
            <fieldset>
                <input type="hidden" id="rename-path" name="path"/>
                <input name="CSRFToken" value="@part(sirius.web.http.CSRFHelper.class).getCSRFToken()"
                       type="hidden"/>
                <t:textfield id="rename-name" name="name" value="" labelKey="Model.name" class="required"/>
            </fieldset>
        </t:modal>
    </form>
    <form id="move-file-form" method="post" action="/fs/move">
        <input type="hidden" name="path" value=""/>
        <input type="hidden" name="newParent" value=""/>
        <input name="CSRFToken" value="@part(sirius.web.http.CSRFHelper.class).getCSRFToken()" type="hidden"/>
    </form>
    <form id="move-multiple-file-form" method="post" action="/fs/move/multiple">
        <input type="hidden" name="paths" value=""/>
        <input type="hidden" name="newParent" value=""/>
        <input name="CSRFToken" value="@part(sirius.web.http.CSRFHelper.class).getCSRFToken()" type="hidden"/>
    </form>
    <form id="delete-multiple-file-form" method="post" action="/fs/delete/multiple">
        <input type="hidden" name="paths" value=""/>
        <input type="hidden" name="newParent" value=""/>
        <input name="CSRFToken" value="@part(sirius.web.http.CSRFHelper.class).getCSRFToken()" type="hidden"/>
    </form>
    <form id="create-directory-form" method="post" action="/fs/createDirectory">
        <t:modal name="create-directory-modal" titleKey="VFSController.createDirectory" submitKey="NLS.ok"
                 cancelKey="NLS.cancel">
            <fieldset>
                <input type="hidden" name="parent" value="@dir.path()"/>
                <input name="CSRFToken" value="@part(sirius.web.http.CSRFHelper.class).getCSRFToken()"
                       type="hidden"/>
                <t:textfield id="directory-name" name="name" value="" labelKey="Model.name" class="required"
                             placeholder="@i18n('VFSController.createDirectory')"/>
            </fieldset>
        </t:modal>
    </form>
    <form id="create-file-form" method="post" action="/fs/createFile">
        <t:modal name="create-file-modal" titleKey="VFSController.createFile" submitKey="NLS.ok" cancelKey="NLS.cancel">
            <fieldset>
                <input type="hidden" name="parent" value="@dir.path()"/>
                <input name="CSRFToken" value="@part(sirius.web.http.CSRFHelper.class).getCSRFToken()"
                       type="hidden"/>
                <t:textfield id="file-name" name="name" value="" labelKey="Model.name" class="required"/>
            </fieldset>
        </t:modal>
    </form>
    <t:modal name="delete-confirm-modal"
             titleKey="template.html.confirmHeader"
             submitKey="NLS.yes"
             cancelKey="NLS.cancel">
        <fieldset>
            <p>@i18n("template.html.confirmText")</p>
        </fieldset>
    </t:modal>
    <script type="text/javascript">
        function renameFile(path, name) {
            const _modalElement = document.getElementById("rename-modal");
            if (!_modalElement.modal) {
                _modalElement.modal = new bootstrap.Modal(_modalElement);
            }

            _modalElement.querySelector("#rename-name").value = name;
            _modalElement.querySelector("#rename-path").value = path;

            _modalElement.addEventListener('shown.bs.modal', () => {
                _modalElement.querySelector("#rename-name").focus();
            });
            _modalElement.modal.show();
        }

        function moveFile(filePath) {
            const _form = document.getElementById('move-file-form');

            selectVFSFile({
                path: '@dir.path()',
                allowDirectories: true,
                allowFiles: false,
                modalTitle: '___i18n("VFSController.selectDirectory")'
            }).then(newParent => {
                _form.querySelector("input[name='path']").value = filePath;
                _form.querySelector("input[name='newParent']").value = newParent;
                _form.submit();
            });
        }

        function moveFiles(filePaths) {
            const _form = document.getElementById('move-multiple-file-form');

            selectVFSFile({
                path: '@dir.path()',
                allowDirectories: true,
                allowFiles: false,
                modalTitle: '___i18n("VFSController.selectDirectory")'
            }).then(newParent => {
                _form.querySelector("input[name='newParent']").value = newParent;
                filePaths.forEach(filePath => {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = 'paths';
                    input.value = filePath;
                    _form.appendChild(input);
                });

                _form.submit();
            });
        }

        document.getElementById("move-selected-files-button").addEventListener('click', function (event) {
            event.preventDefault(); // Prevent the default anchor behavior
            moveFiles(getSelectedFiles());
        });

        function deleteFiles(filePaths) {
            const _modalElement = document.getElementById("delete-confirm-modal");
            if (!_modalElement.modal) {
                _modalElement.modal = new bootstrap.Modal(_modalElement);
            }

            const _form = document.getElementById('delete-multiple-file-form');
            filePaths.forEach(filePath => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'paths';
                input.value = filePath;
                _form.appendChild(input);
            });

            _modalElement.addEventListener('shown.bs.modal', () => {
                _modalElement.querySelector(".modal-footer .btn-primary").addEventListener('click', () => {
                    _form.submit();
                }, {once: true});
            });

            _modalElement.modal.show();
        }

        document.getElementById("delete-selected-files-button").addEventListener('click', function (event) {
            event.preventDefault(); // Prevent the default anchor behavior

            deleteFiles(getSelectedFiles());
        });

        function getSelectedFiles() {
            return Array.from(document.querySelectorAll('.select-table-row-checkbox-js:checked'))
                .map(checkbox => checkbox.getAttribute('data-entity-id'));
        }

        function createDirectory() {
            const _modalElement = document.getElementById("create-directory-modal");
            if (!_modalElement.modal) {
                _modalElement.modal = new bootstrap.Modal(_modalElement);
            }

            _modalElement.addEventListener('shown.bs.modal', () => {
                _modalElement.querySelector("#directory-name").focus();
            });
            _modalElement.modal.show();
        }

        function createFile() {
            const _modalElement = document.getElementById("create-file-modal");
            if (!_modalElement.modal) {
                _modalElement.modal = new bootstrap.Modal(_modalElement);
            }

            _modalElement.addEventListener('shown.bs.modal', () => {
                _modalElement.querySelector("#select-file-modal-search-filter").focus();
            });
            _modalElement.modal.show();
        }

        function toggleBulkActionButtons() {
            const anyChecked = document.querySelectorAll('.select-table-row-checkbox-js:checked').length > 0;
            document.getElementById("move-selected-files-button").classList.toggle('disabled', !anyChecked);
            document.getElementById("delete-selected-files-button").classList.toggle('disabled', !anyChecked);
        }

        document.querySelectorAll('.select-all-visible-table-rows-checkbox-js').forEach(function (_selectAllCheckbox) {
            _selectAllCheckbox.addEventListener('change', function () {
                const checkboxes = document.querySelectorAll('.select-table-row-checkbox-js');
                checkboxes.forEach(function (_checkbox) {
                    _checkbox.checked = _selectAllCheckbox.checked;
                });
                toggleBulkActionButtons();
            });
        });

        document.querySelectorAll('.select-table-row-checkbox-js').forEach(function (_checkbox) {
            _checkbox.addEventListener('change', function (event) {
                toggleBulkActionButtons();
            });
        });
    </script>
</t:page>
