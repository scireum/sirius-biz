<i:arg type="sirius.biz.jobs.params.Parameter" name="param"/>
<i:arg type="Map" name="context"/>

<!--@ setting optional=true because we don't want the singleselect to prefill automatically-->
<!--@ this keeps the behavior of the (old) wondergem template-->
<i:local name="additionalClasses" value="@apply('param-%s %s', param.getName(), param.isRequired() ? 'required' : '')"/>
<i:local name="value"
         value="@param.getBuilder().as(sirius.biz.codelists.LookupTableParameter.class).createLookupValue(param.get(context).orElse(null).as(String.class))"/>
<t:lookupValue class="@apply('col-md-12 col-xs-12 %s', additionalClasses)"
               name="@param.getName()"
               label="@param.getLabel()"
               help="@param.getDescription()"
               optional="true"
               value="@value">
    <i:block name="script">
        const _elem = sirius.querySelector(".param-___param.getName()");
        _elem.addEventListener("clear", function () {
            autocomplete.select.clear(true, false);
        });
        _elem.addEventListener("updated-value", function (event) {
            autocomplete.val(event.detail, true);
        });
    </i:block>

    <i:block name="autocompleteOptions">
        {
            suggestionsUriBuilder: function (query) {
                const suggestionUri = "@apply('/system/lookuptable/autocomplete/%s/%s/%s', value.getTableName(), value.getDisplay(), value.getExtendedDisplay())";
                const context = sirius.getFormData(sirius.querySelector(".edit-form"));
                const urlParameter = new URLSearchParams(context);
                urlParameter.append("query", query);
                return suggestionUri + "?" + urlParameter.toString();
            }
        }
    </i:block>
</t:lookupValue>
