<i:arg name="job" type="sirius.biz.jobs.JobFactory"/>
<i:arg name="context" type="Map"/>

<script type="text/javascript">
    sirius.ready(function () {
        function onChange() {
            const formData = getFormData(sirius.querySelector(".edit-form"));
            sirius.getJSON("/job/params/___job.getName()", formData).then(handleParameterUpdates);
        }

        function handleParameterUpdates(json) {
            for (const name in json.params) {
                const _element = sirius.querySelector('.param-' + name);
                let param = json.params[name];
                if (param.visible) {
                    _element.removeAttribute("hidden");
                } else {
                    _element.setAttribute("hidden", true);
                }
                if (param.clear) {
                    sirius.dispatchEvent("clear", _element);
                }
                if (typeof param.updatedValue !== 'undefined') {
                    sirius.dispatchEvent("updated-value", _element, param.updatedValue);
                }
                const _message = sirius.querySelector('.param-' + name + '-validation');
                if (_message) {
                    _message.parentNode.removeChild(_message);
                }
                if (typeof param.validation !== 'undefined') {
                    const html = Mustache.render(
                        "<div class='mt-1 py-1 px-3 border-top param-{{name}}-validation alert-{{style}} border-{{style}}'>" +
                        "<small>{{{html}}}</small>" +
                        "</div>", Object.assign({
                            name: name,
                        }, param.validation));
                    _element.insertAdjacentHTML("beforeend", html);
                }
            }
        }

        document.querySelectorAll('.edit-form input[name]').forEach(function (_input) {
            _input.addEventListener("change", onChange);
        });
        document.querySelectorAll('.edit-form .token-autocomplete-container').forEach(function (_input) {
            _input.addEventListener("tokens-changed", onChange);
        });
        handleParameterUpdates({
            params: <i:raw>@job.computeRequiredParameterUpdates(context).toString()</i:raw>
        });
    });
</script>
