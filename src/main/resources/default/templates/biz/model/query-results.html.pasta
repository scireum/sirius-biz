<i:arg type="sirius.db.mixing.EntityDescriptor" name="type"/>
<i:arg type="String" name="query"/>
<i:arg type="int" name="limit"/>
<i:arg type="List" name="entities"/>
<i:arg type="List" name="properties"/>

<t:page title="Query Tool">
    <i:block name="breadcrumbs">
        <li><a href="/system/query">Query Tool</a></li>
    </i:block>

    <t:pageHeader title="Query Tool"/>

    <i:invoke template="/templates/biz/model/query-header.html.pasta" query="@query" limit="@limit" type="type"/>

    <t:emptyCheck data="@entities">
        <t:datacards size="x-large">
            <i:for type="sirius.db.mixing.BaseEntity" var="entity" items="entities">
                <t:datacard subTitle="@entity.getClass().getName()">
                    <i:block name="title">
                        <i:if test="sirius.biz.tenants.Tenant.class.isAssignableFrom(entity.getClass())">
                            <i:local name="tenantId" value="@String.valueOf(entity.getId())"/>
                            <t:smartValue type="tenant" payload="@tenantId"
                                          label="@sirius.kernel.di.Injector.context().getPart(sirius.biz.tenants.Tenants.class).fetchCachedTenantName(tenantId)"/>
                            -
                        </i:if>
                        <i:if test="sirius.biz.tenants.UserAccount.class.isAssignableFrom(entity.getClass())">
                            <i:local name="userId"
                                     value="@String.valueOf(entity.getId())"/>
                            <t:smartValue type="user-account" payload="@userId"
                                          label="@sirius.kernel.di.Injector.context().getPart(sirius.biz.tenants.Tenants.class).fetchCachedUserName(userId)"/>
                            -
                        </i:if>
                        @entity.getIdAsString()
                    </i:block>
                    <table class="table table-hover table-sm">
                        <thead>
                        <tr>
                            <th>Field</th>
                            <th>Value</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr>
                            <td><b>Id</b></td>
                            <td>@entity.getId()</td>
                        </tr>
                        <i:for type="sirius.db.mixing.Property" var="property" items="properties">
                            <tr>
                                <td><b>@property.getName()</b></td>
                                <td style="word-wrap: anywhere">
                                    <i:if test="property.is(sirius.db.mixing.properties.BaseEntityRefProperty.class)">
                                        <i:local name="reference"
                                                 value="property.as(sirius.db.mixing.properties.BaseEntityRefProperty.class)"/>
                                        <i:if test="@isFilled(reference.getValue(entity))">
                                            <i:if test="sirius.biz.tenants.Tenant.class.isAssignableFrom(reference.getReferencedType())">
                                                <i:local name="tenantId"
                                                         value="@String.valueOf(reference.getValue(entity))"/>
                                                <t:smartValue type="tenant" payload="@tenantId"
                                                              label="@sirius.kernel.di.Injector.context().getPart(sirius.biz.tenants.Tenants.class).fetchCachedTenantName(tenantId)"/>
                                                -
                                            </i:if>
                                            <i:if test="sirius.biz.tenants.UserAccount.class.isAssignableFrom(reference.getReferencedType())">
                                                <i:local name="userId"
                                                         value="@String.valueOf(reference.getValue(entity))"/>
                                                <t:smartValue type="user-account" payload="@userId"
                                                              label="@sirius.kernel.di.Injector.context().getPart(sirius.biz.tenants.Tenants.class).fetchCachedUserName(userId)"/>
                                                -
                                            </i:if>
                                            @reference.getValue(entity)
                                            <span class="text-muted">(@reference.getReferencedDescriptor().getType().getName())</span>
                                            <span class="ps-2 pe-2">-</span>
                                            <span class="text-small">
                                            <a href="/system/query?class=@reference.getReferencedDescriptor().getName()&query=id:@reference.getValue(entity)"
                                               class="text-decoration-none"
                                               target="_blank">
                                                <i class="fa-solid fa-external-link-alt"></i>
                                                <span class="text-decoration-underline">Query</span>
                                            </a>
                                            </span>
                                        </i:if>
                                        <i:else>
                                            <i:if test="property.is(sirius.db.mixing.properties.NestedListProperty.class)">

                                                <i:invoke
                                                        template="/templates/biz/model/query-nested-property.html.pasta"
                                                        property="property.as(sirius.db.mixing.properties.NestedListProperty.class)"
                                                        entity="@entity"/>

                                                <i:else>
                                                    <i:if test="property.is(sirius.db.mixing.properties.BaseMapProperty.class)">

                                                        <i:invoke
                                                                template="/templates/biz/model/query-map-property.html.pasta"
                                                                property="property.as(sirius.db.mixing.properties.BaseMapProperty.class)"
                                                                entity="@entity"/>

                                                        <i:else>
                                                            <i:if test="property.is(sirius.db.mixing.properties.BaseEntityRefListProperty.class)">
                                                                <i:invoke
                                                                        template="/templates/biz/model/query-ref-list-property.html.pasta"
                                                                        property="property.as(sirius.db.mixing.properties.BaseEntityRefListProperty.class)"
                                                                        entity="@entity"/>

                                                                <i:else>
                                                                    <i:if test="property.is(sirius.db.mixing.properties.EnumProperty.class) && property.getValue(entity) != null">
                                                                        <i:local name="enumValue"
                                                                                 value="@property.getValue(entity)"/>

                                                                        <span class="pe-2">@toUserString(enumValue)</span>
                                                                        <t:tag color="@sirius.biz.model.QueryController.determineEnumTagColor(enumValue.as(java.lang.Enum.class))">
                                                                            @enumValue.as(java.lang.Enum.class).name()
                                                                        </t:tag>
                                                                        <i:else>
                                                                            <i:if test="property.is(sirius.db.mixing.properties.AmountProperty.class) && property.getValue(entity) != null">
                                                                                <i:local name="amountValue" value="property.getValue(entity).as(sirius.kernel.commons.Amount.class)"/>
                                                                                <i:local name="numberFormat" value="property.as(sirius.db.mixing.properties.AmountProperty.class).getAnnotatedNumberFormat().orElse(sirius.kernel.commons.NumberFormat.TWO_DECIMAL_PLACES)"/>
                                                                                @amountValue.toString(numberFormat)

                                                                                <i:else>
                                                                                    @toUserString(property.getValue(entity))
                                                                                </i:else>
                                                                            </i:if>
                                                                        </i:else>
                                                                    </i:if>
                                                                </i:else>
                                                            </i:if>
                                                        </i:else>
                                                    </i:if>
                                                </i:else>
                                            </i:if>
                                        </i:else>
                                    </i:if>
                                    <i:if test="property.getValue(entity) != null && !type.isFetched(entity, property)">
                                        <t:tag color="red" class="ms-2">
                                            Empty in DB
                                        </t:tag>
                                    </i:if>
                                </td>
                            </tr>
                        </i:for>
                        </tbody>
                    </table>
                </t:datacard>
            </i:for>
        </t:datacards>
    </t:emptyCheck>
</t:page>
