<k:article code="5ZM4U"
           lang="en"
           parent="DJELK"
           title="System Health Monitoring"
           permissions="flag-system-tenant"
           crossReferences="SHJEK">
    <i:block name="description">Describes views and APIs provided to monitor the system health.</i:block>

    <i:block name="sidebar">
        <k:toc>
            <k:tocLink link="#system-state">System State</k:tocLink>
            <k:tocLink link="#health-api">Health API</k:tocLink>
        </k:toc>
    </i:block>

    <k:section heading="System State" anchor="system-state">
        The <a href="/system/state" target="_blank">System State View</a> can be used to show the state of each node
        in the cluster along with its most relevant metrics.
    </k:section>
    <k:section heading="Health API" anchor="health-api">
        The <a href="/system/api/health" target="_blank">System Health APIs</a> can be used to basic monitoring and
        also to obtain all recorded metrics in a <b>Prometheus</b> compatible format. Note that next to the monitoring
        API provided here (<k:inlineCode>/system/monitor</k:inlineCode>), the Cluster API <k:ref code="V7FGJ" /> also
        provides a monitoring URL (<k:inlineCode>/system/cluster/ready</k:inlineCode>), which takes the node-bleeding into
        account. Therefore, the former should be used by monitoring tools, to get notified if a node is down and the latter
        should be used by an upstream load-balancer to check the node health/readiness.
    </k:section>
</k:article>
