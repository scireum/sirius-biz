<k:article code="EAI5V" lang="de" parent="SLEOK"
           title="Verbindung zum Upload-Server und automatischer Start von Jobs"
           permissions="flag-logged-in+ftp-server-enabled,flag-logged-in+ssh-server-enabled">
    <i:block name="description">Erklärt wie Jobs via Datei-Upload gestartet werden können.</i:block>

    <i:local name="ftpEnabled" value="UserContext.getCurrentUser().hasPermission('ftp-server-enabled')"/>
    <i:local name="sshEnabled" value="UserContext.getCurrentUser().hasPermission('ssh-server-enabled')"/>

    <k:section heading="Einrichtung des Zugriffs zum Upload-Server">
        <p>
            Sie können Dateien per
            <i:if test="ftpEnabled && sshEnabled">
                FTP oder SSH-Upload
            </i:if>
            <i:if test="ftpEnabled && !sshEnabled">
                FTP-Upload
            </i:if>
            <i:if test="!ftpEnabled && sshEnabled">
                SSH-Upload
            </i:if>
            übergeben, um diese etwa im Medienpool abzulegen oder automatisch einen Verarbeitungsjob starten zu lassen.
        </p>
        <p>
            Im Folgenden finden Sie die dafür notwendigen Informationen.
        </p>
    </k:section>
    <t:permission permission="ssh-server-enabled">
        <i:local name="sshServer" value="@part(sirius.biz.storage.layer3.downlink.ssh.SSHServer.class)"/>
        <k:section heading="SSH">
            <p>
                Es wird der Einsatz von SFTP empfohlen (Secure File Transfer Protocol, SSH File Transfer Protocol).
            </p>
            <p>
                Host: <k:inlineCode>@sshServer.computeExternalHost()</k:inlineCode>
                <br>
                Port: <k:inlineCode>@sshServer.computeExternalPort()</k:inlineCode>
            </p>
        </k:section>
    </t:permission>
    <t:permission permission="ftp-server-enabled">
        <i:local name="ftpServer" value="@part(sirius.biz.storage.layer3.downlink.ftp.FTPServer.class)"/>
        <k:section heading="FTP">
            <p>
                Host: <k:inlineCode>@ftpServer.computeExternalHost()</k:inlineCode>
                <br>
                Port: <k:inlineCode>@ftpServer.computeExternalPort()</k:inlineCode>
            </p>
            <i:if test="ftpServer.enabledTLS()">
                <p>
                    FTP über TLS (auch FTPS oder FTP verschlüsselt mit TLS) ist aktiv und wird dadurch empfohlen.
                </p>
                <p>
                    <b>Hinweis:</b> Es sind Einschränkungen bekannt bei der Verwendung von FTP-SSL mit der
                    Client-Software FileZilla (TLS-Warnung vom Server). Für andere Client-Software wie z.B. CyberDuck
                    sind diese Einschränkungen nicht bekannt. FTP ohne SSL (nicht empfohlen) funktioniert auch mit
                    FileZilla.
                </p>
            </i:if>
        </k:section>

    </t:permission>
    <k:section heading="Benutzername und Berechtigungen">
        <p>
            Benutzername und Kennwort des entsprechend berechtigten Backend-Benutzers werden benötigt.
        </p>
        <p>
            Es müssen alle nötigen Berechtigungen am Unternehmen und am Benutzer vorhanden sein um Uploads zu
            tätigen und ggfs. um Verarbeitungsjobs zu starten.
        </p>
        <p>
            <b>Hinweis:</b> Für vollautomatisierte Übertragungen durch "Systembenutzer" wird empfohlen, den FTP-Benutzer
            im Backend am Backend-Benutzer unter <b>Sicherheit</b> &rarr; <b>Zugangsbereiche</b> auf "Dateisystem
            (FTP, ...)" einzuschränken.
        </p>
    </k:section>
    <k:section heading="Ordnerstruktur auf dem Upload-Server">
        <p>
            Die folgenden Ordner sind auf dem Upload-Server verfügbar:
        </p>
        <ul>
            <i:for var="child"
                   type="sirius.biz.storage.layer3.VirtualFile"
                   items="@part(VirtualFileSystem.class).root().allChildren().stream().toList()">
                <li>
                    @child.name()
                </li>
            </i:for>
        </ul>
    </k:section>
    <k:section heading="Verarbeitungsjob per Upload starten">
        <p>
            Alle Verarbeitungsjobs, die Dateien annehmen, können automatisch, d.h. ohne Durchführung von weiteren
            Schritten in der Verwaltungsoberfläche gestartet werden. Dafür muss eine Datei per FTP-Upload bereitgestellt
            werden. Die notwendigen Parameter werden dabei über eine sogenannte Vorlage vordefiniert.
        </p>
        <p>
            <b>Ablauf:</b>
        </p>
        <ol>
            <li>
                Vorbereitung der Vorlage (dieser Schritt ist nur einmalig erforderlich):
                Rufen Sie zunächst den gewünschten Import in der Verwaltungsoberfläche auf.
                Konfigurieren Sie nun die gewünschten Job-Parameter.
                Erstellen Sie dann über die Schaltfläche "+ Vorlage anlegen" rechts unter Vorlagen eine neue Vorlage und
                geben Sie Ihrer Vorlage einen Namen.
            </li>
            <li>
                Verbinden Sie sich nun wie oben beschrieben mit dem FTP-Server.
            </li>
            <li>
                Legen Sie die zu verarbeitende Datei in der Ordnerstruktur unter
                <k:inlineCode>jobs/&lt;Name des Verarbeitungsjobs&gt;/&lt;Ihr Vorlagenname&gt;</k:inlineCode>
                ab
            </li>
            <li>
                Sobald die Datei erfolgreich in den Ordner hochgeladen ist, wird der gewählte Verarbeitungsjob
                automatisch gestartet. Den Fortschritt der Verarbeitung können Sie wie gewohnt in der
                Verwaltungsoberfläche unter <b>Verwalten</b> &rarr; <b>Prozesse</b> überprüfen.
            </li>
        </ol>
    </k:section>
</k:article>
