/*
 * Made with all the love in the world
 * by scireum in Remshalden, Germany
 *
 * Copyright by scireum GmbH
 * http://www.scireum.de - info@scireum.de
 */

package sirius.biz.analytics.reports;

import com.alibaba.fastjson.JSONObject;
import sirius.kernel.commons.Strings;
import sirius.kernel.di.std.Part;

/**
 * Represents a cell which can be rendered in a table or metrics view.
 * <p>
 * A cell is commonly generated by a {@link Cells} and later rendered with the appropriate {@link CellFormat}.
 */
public class Cell {

    private final Object value;

    @Part
    private static Cells cells;

    /**
     * Creates a plain cell.
     *
     * @param value the plain (unformatted) value of the cell.
     */
    public Cell(String value) {
        this.value = value;
    }

    /**
     * Creates a new cell based on the given JSON description.
     * <p>
     * Most commonly this is invoked via {@link Cells}.
     *
     * @param value the json description to render
     */
    public Cell(JSONObject value) {
        this.value = value;
    }

    /**
     * Determines if a value is present
     *
     * @return <tt>true</tt> if a value is present, <tt>false</tt> otherwise
     */
    public boolean isFilled() {
        return Strings.isFilled(value);
    }

    /**
     * Serializes the cell into a JSON description.
     *
     * <p>
     * This can later be passed into {@link Cells#render(String)} to render the cell.
     *
     * @return a JSON string representing this cell
     */
    public String serializeToString() {
        return value instanceof JSONObject object ? object.toJSONString() : (String) value;
    }

    /**
     * Directly renders this cell.
     *
     * @return a HTML string which represents the rendered result
     */
    public String render() {
        if (value instanceof JSONObject object) {
            return cells.renderJSON(object);
        } else {
            return cells.render(serializeToString());
        }
    }
}
