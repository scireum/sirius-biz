docker.file = [ "docker-compose.yml" ]
docker.project = "siriusbizdev"
docker.keepRunning=true

sirius.autoSetup = true

nls.languages=[de, en]

jdbc {
    database {
        system {
            profile = "mariadb"
            user = "root"
            password = "root"
            database = "test"
        }
        clickhouse {
            profile = "clickhouse"
            user = ""
            password = ""
            database = "test"
        }
    }
}

mixing {
    jdbc {
        mixing {
            dialect = "mariadb"
            database = "system"
            initSql = "CREATE DATABASE IF NOT EXISTS test"
        }
        analytics {
            dialect = "clickhouse"
            database = "clickhouse"
            initSql = "CREATE DATABASE IF NOT EXISTS test"
        }
    }
}

mongo.databases.mixing {
    hosts: "localhost"
    db: "test"
}

elasticsearch {
    hosts = "localhost"
}

redis.pools {
    system {
        host = "localhost"
    }
    jupiter {
        host = "localhost"
    }
}

http.sessionSecret = "TEST"
storage.sharedSecret = "TEST"

mail.smtp.host=localhost

nls {
    defaultLanguage = de
    languages = [ de, en ]
}

sirius.frameworks {
    biz.tenants = true
    biz.tenants-jdbc = true
    biz.tenants-mongo = false
    biz.code-lists-jdbc = true
    biz.code-lists-mongo = false
    biz.protocols = true
    biz.journal = true
    biz.sequences = true
    biz.locks = true
    biz.storage = true
    biz.storage-blob-jdbc = true
    biz.storage-blob-mongo = false
    biz.storage-replication-jdbc = true
    biz.storage-replication-mongo = false
    biz.processes = true
    biz.jobs = true
    biz.job-presets-jdbc = true
    biz.job-presets-mongo = false
    biz.analytics-execution-flags-jdbc = true
    biz.analytics-execution-flags-mongo = false
    biz.analytics-metrics-jdbc = true
    biz.analytics-metrics-mongo = false
    biz.scheduler-jdbc = true
    biz.scheduler-mongo = false
    biz.isenguard = true

    tycho.knowledge-base = true
    jupiter = true
}

storage.layer3.downlink.ftp.port = 2121
storage.layer3.downlink.ssh.port = 2222

s3 {

    stores {
        system {
            accessKey = "AKIAIOSFODNN7EXAMPLE"
            secretKey = "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
            endPoint = "http://localhost:9000/s3"
            bucketSuffix = ".sirius.biz"
            pathStyleAccess = true
            signer = ""
        }
    }

}
